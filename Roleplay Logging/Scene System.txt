@skip isdbref(tag(setr(1,scene)))={@assert/inline isdbref(globalroom())=@pemit %#=ERROR: No global room set!;@assert/inline isdbref(setr(0,create(Scene System,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE !NO_COMMAND;@tag/add %q1=%q0;@tel %q0=[globalroom()];@parent %q0=#info_lib}

&CMD.SCENE #scene=$^(?s)(?\:@|\+)?(scene|scenes|plot|plots|rplog|rplogs|log|logs)(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:th setq(!,switch(%1,scene,scene,scenes,scene,plot,plot,plots,plot,rplog,scene,rplogs,scene,log,scene,logs,scene),family);@assert/inline isint(setr(!,u(FN.PREPENT,%#),ent))=@pemit %#=Couldn't create Entity: %q<ent>;@attach #inc/GET_SWITCH=%2,%q<family>;@attach %!/SW.%q<family>.[strfirstof(%q<switch>,MAIN)]=trim(%3),%4
@set #scene/CMD.SCENE=regexp


@@ SCENE section
&SWITCHES.SCENE.0 #scene=CREATE|TITLE|PITCH|OUTCOME|START|PAUSE|FINISH|TAG|UNTAG|SCHEDULE|RESCHEDULE|UNDO|REDO|EDIT|UPCOMING|CALENDAR|OLD|ROLE

&Q.PREPENT.SELECT #scene=SELECT entity_id FROM entity WHERE entity_objid=?
&Q.PREPENT.INSERT #scene=INSERT INTO entity (entity_name,entity_objid) VALUES (?,?)
&FN.PREPENT #scene=privatize(1,if(isint(setr(!,mysql(PREPENT.SELECT,objid(%0)),res)),%q<res>,if(!strlen(setr(!,mysql(PREPENT.INSERT,name(%0),objid(%0)),res)),u(FN.PREPENT,%0),#-1 SQL ERROR: %q<res>)))

&Q.PREPACT.SELECT #scene=SELECT actor_id FROM actor_view WHERE scene_id=? AND entity_objid=?
&Q.PREPACT.INSERT #scene=INSERT actor (scene_id,entity_id,actor_date_created) VALUES (?,?,FROM_UNIXTIME(?))
&FN.PREPACT #scene=privatize(1,if(isint(setr(!,mysql(PREPACT.SELECT,%0,objid(%1)),res)),%q<res>,if(!strlen(setr(!,mysql(PREPACT.INSERT,%0,u(FN.PREPENT,%1),secs()),res)),u(FN.PREPACT,%0,%1),#-1 SQL ERROR: %q<res>)))

&Q.INSERT.POSE #scene=INSERT INTO pose (actrole_id,channel_id,pose_text,pose_date_created) VALUES (!,?,?,?)
&Q.UPDATE.POSE.FIELD #scene=UPDATE pose SET !=? WHERE pose_id=?
&INSERT_POSE #scene=@attach #inc/DOSQL=INSERT.POSE/pose_id,%0,%1,stripansi(%2),strfirstof(%3,secs());@attach #inc/DOSQL=UPDATE.POSE.FIELD=pose_text_color,%2,%q<pose_id>
@@ %0 - actrole (ID or NULL), %1 - channel id, %2 - text, %3 - optional timestamp

&Q.UPDATE.SCENE.FIELD #scene=UPDATE scene SET !=? WHERE scene_id=?
&Q.UPDATE.SCENE.UNIXTIME #scene=UPDATE scene SET !=FROM_UNIXTIME(?) WHERE scene_id=?

&START_SCENE #scene=@set %l=GAME.SCENE:%0;@attach #inc/DOSQL=UPDATE.SCENE.FIELD,scene_status,1,%0;@attach #inc/DOSQL=UPDATE.SCENE.UNIXTIME=scene_date_started,secs(),%0
@@ %0 - Scene ID.

&PAUSE_SCENE #scene=@attach #inc/DOSQL=UPDATE.SCENE.FIELD,scene_status,2,%0;

&Q.INSERT.ACTOR #scene=INSERT actor (scene_id,entity_id,actor_type,actor_date_created) VALUES (?,?,?,FROM_UNIXTIME(?))

&MSG_SCENE #scene=@pemit/list [setunion(sql(SELECT entity_objid FROM actor WHERE scene_id=%0 AND actor_type>=%1),%2)]=[ansi(c,SCENE %0:)] [gm_format(%3,##,%:)]
@@ %0 - scene id, %1 - minimum actor_type to display to, %2 - extra objids to send to. %3 - message.

&Q.INSERT.SCENE #scene=INSERT INTO scene (scene_title,scene_title_color,scene_date_created,scene_date_scheduled) VALUES (?,?,?,?,FROM_UNIXTIME(?),FROM_UNIXTIME(?))

&SW.SCENE.CREATE #scene=@assert/inline strlen(%0)=@pemit %#=No name entered!;@attach #inc/DOSQL=INSERT.SCENE/scene,stripansi(%0),%0,secs(),strfirstof(%2,secs());@if strlen(%1)={@attach #inc/DOSQL=UPDATE.SCENE.FIELD,scene_pitch,stripansi(%1),%q<scene>;@attach #inc/DOSQL=UPDATE.SCENE.FIELD,scene_pitch_color,%1,%q<scene>};@attach #inc/DOSQL=INSERT.ACTOR,%q<scene>,%q<ent>,2,secs();@if strlen(%2)={@attach %!/MSG_SCENE=%q<scene>,0,lwho(),Scheduled for $fancytime(%2) by $you()},{@@ MUST ANNOUNCE LOCALLY HERE}

&SW.SCENE.SCHEDULE #scene=@attach #inc/VALID.FUTURE=before(%0,/);@attach %!/SW.SCENE.CREATE=after(%0,/),%1,%q<value>

&Q.SELECT.SCENE #scene=SELECT ! FROM scene WHERE scene_id=?

&FINDSCENE #scene=@assert/inline strlen(%0)=@pemit %#=No Scene ID entered!;@assert/inline isint(setr(!,mysql(SELECT.SCENE,scene_id,%0),%1))=@pemit %#=That isn't a valid scene ID!;th setq(!,mysql(SELECT.SCENE,scene_title,%0),sname);

&Q.SELECT.ACTOR.TYPE #scene=SELECT actor_type FROM actor WHERE scene_id=? AND entity_id=?

&CANCONTROL #scene=@assert cor(gtebittype(%#,4),gte(mysql(SELECT.ACTOR.TYPE,%q<scene>,%q<ent>),2))=@pemit %#=Permission denied.;

&STATUSCHANGE #scene=@attach %!/FINDSCENE=%0,scene;@attach %!/CANCONTROL;@attach #inc/DOSQL=UPDATE.SCENE.FIELD,scene_status,%1,%q<scene>;@pemit %#=Scene %q<scene>: '%q<sname>' has been marked: %2!;@attach %!/MSG_SCENE=%q<scene>,0,lcon(%l,LISTEN,,,1),Scene has been %2!

&SW.SCENE.START #scene=@attach %!/STATUSCHANGE=%0,1,started
&SW.SCENE.PAUSE #scene=@attach %!/STATUSCHANGE=%0,2,paused
&SW.SCENE.FINISH #scene=@attach %!/STATUSCHANGE=%0,3,finished

&JOINSCENE #scene=
@@ %0 - scene ID, %1 actor objid

&SW.SCENE.JOIN #scene=@attach %!/FINDSCENE=%0,scene;@assert/inline eq(1,mysql(SELECT.SCENE,scene_status,%q<scene>))=@pemit %#=Scene %q<scene>: '%q<sname>' is not active!;@attach %!/JOINSCENE=%q<scene>,%:

&PITCHCOME #scene=@attach %!/FINDSCENE=%0,scene;@attach %!/CANCONTROL;@assert/inline strlen(%1)=@pemit %#=No %1 entered!;@attach #inc/DOSQL=UPDATE.SCENE.FIELD,scene_%1,stripansi(%2),%q<scene>;@attach #inc/DOSQL=UPDATE.SCENE.FIELD,scene_%1_color,%2,%q<scene>;@attach %!/MSG_SCENE=%0,0,%:,[capstr(%1)] updated!
@@ %0 - scene, %1 - field, %2 - text

&SW.SCENE.TITLE #scene=@attach %!/PITCHCOME=%0,title,%1;
&SW.SCENE.PITCH #scene=@attach %!/PITCHCOME=%0,pitch,%1;
&SW.SCENE.OUTCOME #scene=@attach %!/PITCHCOME=%0,outcome,%1;

&SW.SCENE.RESCHEDULE #scene=@attach %!/FINDSCENE=%0,scene;@attach %!/CANCONTROL;@attach #inc/VALID.FUTURE=%1;@attach #inc/DOSQL=UPDATE.SCENE.UNIXTIME,scene_date_scheduled,%q<value>;@attach %!/MSG_SCENE=%0,0,%k rescheduled the Scene to: ^^^,%q<value>

&Q.UPDATE.ACTOR.FIELD #scene=UPDATE actor SET !=? WHERE actor_id=?

&SW.SCENE.TAG #scene=@attach %!/FINDSCENE=%0,scene;@break/inline gt(mysql(SELECT.ACTOR.TYPE,%q<scene>,%q<ent>),0)=@pemit %#=You already tagged Scene %q<scene>: '%q<sname>'!;th setq(!,u(FN.PREPACT,%q<scene>,%:),actor);@attach #inc/DOSQL=UPDATE.ACTOR.FIELD,actor_type,1,%q<actor>;@attach %!/MSG_SCENE=%0,0,%k tagged the scene!

&SW.SCENE.UNTAG #scene=@attach %!/FINDSCENE=%0,scene;@assert/inline eq(mysql(SELECT.ACTOR.TYPE,%q<scene>,%q<ent>),1)=@pemit %#=You haven't tagged Scene %q<scene>: '%q<sname>'!;th setq(!,u(FN.PREPACT,%q<scene>,%:),actor);@attach %!/MSG_SCENE=%0,0,%k un-tagged the scene!;@attach #inc/DOSQL=UPDATE.ACTOR.FIELD,actor_type,0,%q<actor>

&SW.SCENE.EDIT #scene=
&SW.SCENE.UNDO #scene=
&SW.SCENE.REDO #scene=

&SW.SCENE.CAPACITY #scene=

&SW.SCENE.TAG #scene=
&SW.SCENE.UNTAG #scene=

@@ PLOT Section
&SWITCHES.PLOT.0 #scene=ADDHELPER|REMHELPER|ADDSCENE|REMSCENE|STARTED|ENDED

&SWITCHES.PLOT.5 #scene=CREATE|ADDRUNNER|REMRUNNER|TITLE|PITCH|OUTCOME

&Q.SELECT.PLOT #scene=SELECT ! FROM plot_view WHERE plot_id=?
&Q.SELECT.PLOT_SCENES #scene=SELECT scene_id FROM scene_plot WHERE plot_id=?
&Q.SELECT.SCENE_VIEW #scene=SELECT ! FROM scene_view WHERE scene_id=?

&FINDPLOT #scene=@assert/inline strlen(%0)=@pemit %#=No Plot ID entered!;@assert/inline isint(setr(!,mysql(SELECT.PLOT,plot_id,%0),%1))=@pemit %#=That isn't a valid Plot ID!;th setq(!,mysql(SELECT.PLOT,plot_title,%0),pname);

&FN.PLOTSCENE.COLUMNS #scene=printf($-4s $-20s $-10s $-15s $-15s,ID,Title,Status,Started,Finished)
&FN.PLOTSCENE.ROW #scene=printf($-4s $-20s $-10s $-15s $-15s,%0,mysql(SELECT.SCENE_VIEW,scene_title_color,%0),elements(setr(!,mysql(SELECT.SCENE_VIEW,scene_status_name[chr(44)]scene_date_started_secs[chr(44)]scene_date_activity_secs,%0),data),1,|),fancytime(elements(%q<data>,2,|)),fancytime(elements(%q<data>,3,|)))

&Q.SELECT.RUNNERS #scene=SELECT entity_objid,entity_name,runner_type_name FROM plot_runner_view WHERE plot_id=? ORDER BY runner_type ASC

&FN.PLOTRUNNER.COLUMNS #scene=printf($-30s $-20s,Name,Status)
&FN.PLOTRUNNER.ROW #scene=printf($-30s $-20s,if(isobjid(elements(%0,1,^)),cname(elements(%0,1,^)),elements(%0,2,^)%B\(Deleted\)),elements(%0,3,^))

&INC.PLOT.DISPLAY #scene=@attach %!/FINDPLOT=%0,plot;@pemit %#=header(Plot %q<plot>: '%q<pname>');@dolist/inline Start End={@if isint(setr(!,mysql(SELECT.PLOT,plot_date_[lcstr(%d0)]_secs,%q<plot>),timestamp))={@pemit %#=[ansi(hw,%d0 Date:)]%b[fancytime(%q<timestamp>)]}};@if strlen(setr(!,mysql2(SELECT.RUNNERS,%q<plot>),runners))={@pemit %#=ansi(confoverride(%#,COLUMN),u(FN.PLOTRUNNER.COLUMNS));@dolist/inline/delimit | %q<runners>={@pemit %#=u(FN.PLOTRUNNER.ROW,%d0)}};@dolist/inline Pitch Outcome={@if strlen(setr(!,mysql(SELECT.PLOT,plot_[lcstr(%d0)]_color,%q<plot>),text))={@pemit %#=separator(%d0);@pemit %#=%q<text>}};@if words(setr(!,mysql(SELECT.PLOT_SCENES,%q<plot>),scenes))={@pemit %#=separator(Related Scenes);@pemit %#=ansi(confoverride(%#,COLUMN),u(FN.PLOTSCENE.COLUMNS));@dolist/inline %q<scenes>={@pemit %#=u(FN.PLOTSCENE.ROW,%d0)}};@pemit %#=footer()

&FN.PLOT.COLUMNS #scene=printf($-5s $-40s,ID,Title)
&FN.PLOT.ROW #scene=printf($-5s $-40s,%0,mysql(SELECT.PLOT,plot_title,%0))

&Q.SELECT.PLOTS #scene=SELECT plot_id FROM plot

&INC.PLOT.LIST #scene=@pemit %#=header(Plots);@pemit %#=ansi(confoverride(%#,COLUMN),u(FN.PLOT.COLUMNS));@if words(setr(!,mysql(SELECT.PLOTS),plots))={@dolist/inline %q<plots>={@pemit %#=u(FN.PLOT.ROW,%d0)}};@pemit %#=footer()

&SW.PLOT.MAIN #scene=@if strlen(%0)={@attach %!/INC.PLOT.DISPLAY},{@attach %!/INC.PLOT.LIST}

&MSG_PLOT #scene=@pemit/list [setunion(sql(SELECT entity_objid FROM plot_runner_view WHERE plot_id=%0 AND runner_type>=%1),%2)]=[ansi(c,PLOT %0:)] [gm_format(%3,##,%:)]
@@ %0 - PLOT id, %1 - minimum actor_type to display to, %2 - extra objids to send to. %3 - message.

&Q.INSERT.PLOT #scene=INSERT INTO plot (plot_title,plot_date_start) VALUES (?,FROM_UNIXTIME(?))
&Q.UPDATE.PLOT #scene=UPDATE plot SET !=? WHERE plot_id=?
&Q.UPDATE.PLOT.UNIXTIME #scene=UPDATE plot SET !=FROM_UNIXTIME(?) WHERE plot_id=?

&Q.INSERT.RUNNER #scene=INSERT INTO plot_runner (plot_id,entity_id,runner_type) VALUES (?,?,?) ON DUPLICATE KEY UPDATE runner_type=VALUES(runner_type)

&SW.PLOT.CREATE #scene=@assert/inline strlen(stripansi(%0))=@pemit %#=No plot title entered!;@attach #inc/DOSQL=INSERT.PLOT/plot,stripansi(%0),secs();@attach #inc/MSG_ALERT=Plot %q<plot> '[stripansi(%0)]' Created.

&Q.SELECT.RUNNER #scene=SELECT ! from plot_runner_view WHERE plot_id=? AND !=?
&Q.DELETE.RUNNER #scene=DELETE pr FROM plot_runner AS pr LEFT JOIN entity AS e on e.entity_id=pr.entity_id WHERE e.entity_objid=? AND pr.plot_id=?

&SW.PLOT.ADDRUNNER #scene=@attach %!/FINDPLOT=%0,plot;@attach #inc/GET_PLAYER=%1,t1;@break/inline eq(mysql(SELECT.RUNNER,%q<plot>,entity_objid,%q<t1>),2)=@pemit %#=[cname(%q<t1>)] is already a runner!;@attach #inc/DOSQL=INSERT.RUNNER,%q<plot>,u(FN.PREPENT,%q<t1>),2;@attach %!/MSG_PLOT=%q<plot>,0,%:,Added a Runner: [cname(%q<t1>)]

&SW.PLOT.REMRUNNER #scene=@attach %!/FINDPLOT=%0,plot;@attach #inc/GET_PLAYER=%1,t1;@assert/inline eq(mysql(SELECT.RUNNER,runner_type,%q<plot>,entity_objid,%q<t1>),2)=@pemit %#=[cname(%q<t1>)] is not a runner!;@attach %!/MSG_PLOT=%q<plot>,0,%:,Removed a Runner: [cname(%q<t1>)];@attach #inc/DOSQL=DELETE.RUNNER,%q<t1>,%q<plot>

&INC.CHANGEFIELD #scene=@attach %!/FINDPLOT=%0,plot;@assert/inline cor(gtebittype(%#,5),gte(mysql(SELECT.RUNNER,runner_type,%q<plot>,entity_objid,%:),%1))=@pemit %#=Permission denied.;@assert/inline cor(gtebittype(%#,5),!isint(mysql(SELECT.PLOT,plot_date_end_secs,%q<plot>)))=@pemit %#=Permission denied. The plot has ended.

&SW.PLOT.ADDHELPER #scene=@attach %!/INC.CHANGEFIELD=%0,2;@attach #inc/GET_PLAYER=%1,t1;@break/inline gt(mysql(SELECT.RUNNER,runner_type,%q<plot>,entity_objid,%q<t1>),0)=@pemit %#=[cname(%q<t1>)] is already a helper or runner!;@attach #inc/DOSQL=INSERT.RUNNER,%q<plot>,u(FN.PREPENT,%q<t1>),1;@attach %!/MSG_PLOT=%q<plot>,0,%:,Added a Helper: [cname(%q<t1>)]

&SW.PLOT.REMHELPER #scene=@attach %!/INC.CHANGEFIELD=%0,2;@attach #inc/GET_PLAYER=%1,t1;@assert/inline eq(mysql(SELECT.RUNNER,runner_type,%q<plot>,entity_objid,%q<t1>),1)=@pemit %#=[cname(%q<t1>)] is not a helper!;@attach %!/MSG_PLOT=%q<plot>,0,%:,Added a Helper: [cname(%q<t1>)];@attach #inc/DOSQL=DELETE.RUNNER,%q<t1>,%q<plot>;

&SW.PLOT.TITLE #scene=@attach %!/INC.CHANGEFIELD=%0,2;@assert/inline strlen(stripansi(%1))=@pemit %#=No title entered!;@attach #inc/DOSQL=UPDATE.PLOT,plot_title,stripansi(%1);@attach %!/MSG_PLOT=%q<plot>,0,%:,Updated the Title.

&SW.PLOT.PITCH #scene=@attach %!/INC.CHANGEFIELD=%0,2;@assert/inline strlen(%1)=@pemit %#=No pitch entered!;@attach #inc/DOSQL=UPDATE.PLOT,plot_pitch,stripansi(%1);@attach #inc/DOSQL=UPDATE.PLOT,plot_pitch_color,%1;@attach %!/MSG_PLOT=%q<plot>,0,%:,Updated the Pitch.

&SW.PLOT.OUTCOME #scene=@attach %!/INC.CHANGEFIELD=%0,2;@assert/inline strlen(%1)=@pemit %#=No outcome entered!;@attach #inc/DOSQL=UPDATE.PLOT,plot_outcome,stripansi(%1);@attach #inc/DOSQL=UPDATE.PLOT,plot_outcome_color,%1;@attach %!/MSG_PLOT=%q<plot>,0,%:,Updated the Outcome.

&SW.PLOT.STARTED #scene=@attach %!/FINDPLOT=%0,plot;@attach #inc/VALID.TIME=%1;@attach #inc/DOSQL=UPDATE.PLOT.UNIXTIME,plot_date_start,%q<value>,%q<plot>;@attach %!/MSG_PLOT=%q<plot>,0,%:,Updated the Plot Start Date.

&SW.PLOT.ENDED #scene=@attach %!/FINDPLOT=%0,plot;@if strmatch(%1,NULL)={@attach #inc/DOSQL=UPDATE.PLOT,plot_date_end,SET_NULL},{@attach #inc/VALID.TIME=%1;@attach #inc/DOSQL=UPDATE.PLOT.UNIXTIME,plot_date_end,%q<value>,%q<plot>};@attach %!/MSG_PLOT=%q<plot>,0,%:,Updated the Plot End Date.

&Q.INSERT.SCENE_PLOT #scene=INSERT INTO scene_plot (plot_id,scene_id) VALUES (?,?)
&Q.DELETE.SCENE_PLOT #scene=DELETE FROM scene_plot WHERE plot_id=? AND scene_id=?

&SW.PLOT.ADDSCENE #scene=@attach %!/INC.CHANGEFIELD=%0,1;@attach %!/FINDSCENE=%1,scene;@break/inline match(mysql(SELECT.PLOT_SCENES,%q<plot>),%q<scene>)=@pemit %#=That scene is already part of the plot!;@attach #inc/DOSQL=INSERT.SCENE_PLOT,%q<plot>,%q<scene>;@attach %!/MSG_PLOT=%q<plot>,0,%:,Added Scene %q<scene>: '%q<sname>';@attach %!/MSG_SCENE=%q<scene>,0,%:,Scene added to Plot %q<plot>: '%q<pname>'

&SW.PLOT.REMSCENE #scene=@attach %!/INC.CHANGEFIELD=%0,1;@attach %!/FINDSCENE=%1,scene;@assert/inline match(mysql(SELECT.PLOT_SCENES,%q<plot>),%q<scene>)=@pemit %#=That scene is not part of the plot!;@attach #inc/DOSQL=DELETE.SCENE_PLOT,%q<plot>,%q<scene>;@attach %!/MSG_PLOT=%q<plot>,0,%:,Removed Scene %q<scene>: '%q<sname>';@attach %!/MSG_SCENE=%q<scene>,0,%:,Scene removed from Plot %q<plot>: '%q<pname>'

@@ Pose Recording

&I_@EMIT #hobj=[not(isdbref(tag(scene)))]
&I_SAY #hobj=[not(isdbref(tag(scene)))]
&I_POSE #hobj=[not(isdbref(tag(scene)))]
&I_P #hobj=[not(isdbref(tag(scene)))]
&I_S #hobj=[not(isdbref(tag(scene)))]

&HOOK.SCENE #hobj=@dolist/inline @emit say pose={@hook/ignore %d0}

&CMD.OVERRIDE #scene=$^(?s)(pose|semipose|say|@emit)(?\:/noeval)?(?\: +(.*))?$:@attach %!/OVERRIDE=%1,%2
@set #scene/CMD.OVERRIDE=regexp

&CMD.OVERRIDE2 #scene=$\:*:@attach %!/OVERRIDE=pose,%0
&CMD.OVERRIDE3 #scene=$\;*:@attach %!/OVERRIDE=semipose,%0
&CMD.OVERRIDE4 #scene=$"*:@attach %!/OVERRIDE=say,%0
&CMD.OVERRIDE5 #scene=$|*:@attach %!/OVERRIDE=@emit,%0

&Q.SELECT.SCENE_ACTIVE #scene=SELECT scene_id FROM scene WHERE scene_id=? AND scene_status=1

&CONFIG.SCENEBORDER.DESC #acc_parent=Show full header/footer around a recorded pose in SceneSys?
&CONFIG.SCENEBORDER.DEFAULT #acc_parent=1
&CONFIG.SCENEBORDER.TYPE #acc_parent=BOOL

&Q.INSERT.CHANNEL #scene=INSERT INTO channel (scene_id,channel_name,channel_objid,channel_category) VALUES (?,?,!,?)

&Q.SELECT.CHANNEl #scene=SELECT ! FROM channel WHERE scene_id=? AND channel_category=? AND channel_name=?

&Q.SELECT.ACTROLE #scene=SELECT actrole_id FROM actrole WHERE actor_id=? AND actrole_name=?

&Q.INSERT.ACTROLE #scene=INSERT INTO actrole (actor_id,actrole_name) VALUES (?,?)

&Q.INSERT.POSE #scene=INSERT INTO pose (actrole_id,channel_id,pose_date_created,pose_text) VALUES (!,?,FROM_UNIXTIME(?),?)

&Q.UPDATE.POSE #scene=UPDATE pose SET !=? WHERE pose_id=?

&Q.INCREMENT.ACTION_COUNT #scene=UPDATE actor SET action_count=action_count+1 WHERE actor_id=?

&HANDLE_RECORD #scene=@skip isint(setr(!,mysql(SELECT.CHANNEL,channel_id,%0,0,Actions),chan_id))={@attach #inc/DOSQL=INSERT.CHANNEL/chan_id,%0,Actions,NULL,0};th setq(!,u(FN.PREPACT,%0,%1),actor);@skip isint(setr(!,mysql(SELECT.ACTROLE,%q<actor>,setr(!,strfirstof(stripansi(setr(!,get(%1/GAME.SCENE.ROLE),setrole)),name(%1)),actname)),role_id))={@attach #inc/DOSQL=INSERT.ACTROLE/role_id,%q<actor>,%q<actname>};@attach #inc/DOSQL=INSERT.POSE/pose_id,%q<role_id>,%q<chan_id>,secs(),stripansi(%2);@attach #inc/DOSQL=UPDATE.POSE,pose_text_color,%2,%q<pose_id>;@attach #inc/DOSQL=INCREMENT.ACTION_COUNT,%q<actor>;@attach #inc/DOSQL=UPDATE.SCENE.UNIXTIME,scene_date_activity,secs(),%q<scene>;

&SCENE_HEADER #scene=th setq(!,cname(%1)[if(strlen(%q<setrole>),%B\(as %q<setrole>\))],dname);th setq(!,[chr(91)][ansi(hg,Scene %0)][chr(93)] %q<dname>'s Pose [chr(91)][ansi(hg,%q<pose_id>)][chr(93)]%B>,disp);th setq(!,printf($^78s,%q<disp>),minimal);@dolist/inline setr(!,lcon(%l,CONNECT),recip)={@if accoption(%d0,SCENEBORDER)={@pemit %d0=subheader(%q<disp>,%d0)},{@pemit %d0=%q<minimal>}}

&SCENE_FOOTER #scene=@dolist/inline %q<recip>={@if accoption(%d0,SCENEBORDER)={@pemit %d0=footer(,%d0)}}

&OVERRIDE #scene=@assert/inline elock(%l/SpeechLock,%#)=@pemit %#=You may not express yourself here.;th setq(!,cand(isint(setr(!,get(%l/GAME.SCENE),scene)),mysql(SELECT.SCENE_ACTIVE,%q<scene>)),sceneactive);th setq(!,u(FN.OVERRIDE,%0,%1,%:,if(%q<sceneactive>,get(%#/GAME.SCENE.ROLE))),pose);@if %q<sceneactive>={@attach %!/HANDLE_RECORD=%q<scene>,%:,%q<pose>;@attach %!/SCENE_HEADER=%q<scene>,%:};@remit %l=%q<pose>;@if t(%q<sceneactive>)={@attach %!/SCENE_FOOTER=%q<scene>,%:}

&FN.OVERRIDE #scene=parsestr(switch(%0,pose,:%1,semipose,;%1,say,"%1,@emit,|%1),%0,",",,&[if(strlen(%3),%3,cname(%2))])
@@ %0 type, %1 - message, %2 actor objid

&CMD.OSAY #scene=$^(?s)(?\:@|\+)?(osay|ooc)(?\: +(.*))?$:@attach %!/OSAY=%2
@set #scene/CMD.OSAY=regexp

&OSAY_RECORD #scene=@skip isint(setr(!,mysql(SELECT.CHANNEL,channel_id,%0,1,OOC),chan_id))={@attach #inc/DOSQL=INSERT.CHANNEL/chan_id,%0,OOC,NULL,1};th setq(!,u(FN.PREPACT,%0,%:),actor);@skip isint(setr(!,mysql(SELECT.ACTROLE,%q<actor>,setr(!,name(%:),actname)),role_id))={@attach #inc/DOSQL=INSERT.ACTROLE/role_id,%q<actor>,%q<actname>};@attach #inc/DOSQL=INSERT.POSE/pose_id,%q<role_id>,%q<chan_id>,secs(),stripansi(%1);@attach #inc/DOSQL=UPDATE.POSE,pose_text_color,%1,%q<pose_id>;@attach #inc/DOSQL=UPDATE.SCENE.UNIXTIME,scene_date_activity,secs(),%q<scene>

&FN.OSAY #scene=parsestr(%0,%0,",",,&[cname(%1)])

&FN.OSAY_HEADER #scene=[ansi(hx,-<)][ansi(hr,OOC)][if(%0,[ansi(hx,:)]%B[ansi(hg,%1)])][ansi(hx,>-)]

&OSAY #scene=@assert/inline elock(%l/SpeechLock,%#)=@pemit %#=You may not express yourself here.;@assert/inline strlen(%0)=@pemit %#=Osay what?;@break/inline strmatch(%0,|*)=@pemit %#=Emits are disabled for osay.;th setq(!,u(FN.OSAY,%0,%:),pose);@if setr(!,cand(isint(setr(!,get(%l/GAME.SCENE),scene)),mysql(SELECT.SCENE_ACTIVE,%q<scene>)),sceneactive)={@attach %!/OSAY_RECORD=%q<scene>,%q<pose>};@remit %l=[u(FN.OSAY_HEADER,%q<sceneactive>,%q<scene>)] %q<pose>

@@ System Messages

&RECORD_SCENE #scene=@skip isint(setr(!,mysql(SELECT.CHANNEL,channel_id,%0,2,%2),chan_id))={@attach #inc/DOSQL=INSERT.CHANNEL/chan_id,%0,%2,NULL,2};@if isobjid(%1)={@skip isint(setr(!,mysql(SELECT.ACTROLE,%q<actor>,setr(!,name(%1),actname)),role_id))={@attach #inc/DOSQL=INSERT.ACTROLE/role_id,%q<actor>,%q<actname>}};@attach #inc/DOSQL=INSERT.POSE/pose_id,strfirstof(%q<role_id>,NULL),%q<chan_id>,secs(),stripansi(%3);@attach #inc/DOSQL=UPDATE.POSE,pose_text_color,%3,%q<pose_id>;
@@ %0 - scene ID, %1 - enactor objid if player, empty otherwise, %2 - system name, %3 - message

&RECORD_ROOM #scene=@if setr(!,cand(isint(setr(!,get(%l/GAME.SCENE),scene)),mysql(SELECT.SCENE_ACTIVE,%q<scene>)),sceneactive)={@attach %!/RECORD_SCENE=%q<scene>,%1,%2,%3}
@@ %0 - room dbref, %1 - enactor objid if player, empty otherwise, %2 - system name, %3 - message