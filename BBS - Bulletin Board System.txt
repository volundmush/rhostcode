@@ the bbs_lib is the parent of all channel-like systems.
@skip isdbref(tag(setr(1,bbs_parent)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object set!;@assert/inline isdbref(setr(0,create(BBS Parent,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE NO_COMMAND;@tag/add %q1=%q0;@tel %q0=#stor}

@lock/user #bbs_parent|ReadLock=EVAL_TRUE/1
@lock/user #bbs_parent|PostLock=EVAL_TRUE/1
@lock/user #bbs_parent|AdminLock=EVAL_GTEBITTYPE/5

&GETID #bbs_parent=u(ORDER)

&CONFIG_PERM #bbs_parent=@assert/inline elock(%2/user|AdminLock,%#)=@pemit %#=Permission denied.

&CONFIG_ISANONYMOUS_DESC #bbs_parent=Non-Board Admin see the ANONYMOUS name instead of normal poster?
&CONFIG_ISANONYMOUS_DEFAULT #bbs_parent=0
&CONFIG_ISANONYMOUS_TYPE #bbs_parent=BOOL

&CONFIG_ANONYMOUS_DESC #bbs_parent=The name to use in Anonymous mode.
&CONFIG_ANONYMOUS_DEFAULT #bbs_parent=Anonymous
&CONFIG_ANONYMOUS_TYPE #bbs_parent=WORD

&CONFIG_MANDATORY_DESC #bbs_parent=Whether a Board is mandatory reading for those who can see it. A Mandatory board is immune to +bbcatchup and nags users.
&CONFIG_MANDATORY_DEFAULT #bbs_parent=0
&CONFIG_MANDATORY_TYPE #bbs_parent=BOOL
&CONFIG_MANDATORY_PERM #bbs_parent=@assert/inline gtebittype(%#,5)=@pemit %#=Permission denied. Only Admin may set a board Mandatory.

&CONFIG_REPLIES_DESC #bbs_parent=Allow +bbreply on the board? Disabling this will not clear existing threads.
&CONFIG_REPLIES_DEFAULT #bbs_parent=1
&CONFIG_REPLIES_TYPE #bbs_parent=BOOL

&CONFIG_TIMEOUT_DESC #bbs_parent=The amount of seconds a post can exist before it will be auto-cleaned.
&CONFIG_TIMEOUT_DEFAULT #bbs_parent=7776000
&CONFIG_TIMEOUT_TYPE #bbs_parent=DURATION

&CONFIG_USETIMEOUT_DESC #bbs_parent=Enable the timeout system for this board?
&CONFIG_USETIMEOUT_DEFAULT #bbs_parent=1
&CONFIG_USETIMEOUT_TYPE #bbs_parent=BOOL

@skip isdbref(tag(setr(1,bbs_fparent)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object set!;@assert/inline isdbref(setr(0,create(BBS Faction Parent,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE NO_COMMAND;@tag/add %q1=%q0;@tel %q0=#stor;@parent %q0=[tag(bbs_parent)]}

&GETID #bbs_fparent=[getconf(loc(%!),ABBREVIATION)][u(ORDER)]

&EVAL_MYFACMEMBERS #bbs_fparent=[facismember(loc(%!),%:)]
&EVAL_MYFACLEADERS #bbs_fparent=[lte(facgetrank(loc(%!,%:)),2)]

@lock/user #bbs_fparent|ReadLock=EVAL_MYFACMEMBERS/1
@lock/user #bbs_fparent|PostLock=EVAL_MYFACMEMBERS/1
@lock/user #bbs_fparent|AdminLock=EVAL_MYFACLEADERS/1

@skip isdbref(tag(setr(1,bbs)))={@assert/inline isdbref(globalroom())=@pemit %#=ERROR: No glogbal room set!;@assert/inline isdbref(setr(0,create(Public Bulletin Boards,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE !NO_COMMAND;@tag/add %q1=%q0;@tel %q0=[globalroom()]}

&REG_BOARD_ID #bbs=([A-Za-z]+)?(\d+)

&FUN_SORTBOARDS #bbs=sortby(#lambda/[lit(comp(get(%0/ORDER),get(%1/ORDER)))],%0)

&FUN_GETBOARDS #bbs=u(FUN_SORTBOARDS,filter(#lambda/[lit(hasattr(%0/ORDER))],lcon(%0,OBJECT,,,1)))

&FUN_BOARDS #bbs=squish(iter(#bbs[if(isdbref(tag(fac)),%B[sortname(u(#fac/FUN_FACTIONS,1))])],u(FUN_GETBOARDS,%i0)))

&FIL_CANREAD #bbs=cor(elock(%0/user|ReadLock,num(%1)),if(%2,,u(FIL_CANPOST,%0,%1)))
&FIL_CANPOST #bbs=cor(elock(%0/user|PostLock,num(%1)),if(%2,,u(FIL_CANADMIN,%0,%1)))
&FIL_CANADMIN #bbs=elock(%0/user|AdminLock,num(%1))

&FUN_FILTER_BOARDS #bbs=filter(%!/FIL_CAN%1,if(strlen(%2),%2,u(FUN_BOARDS)),%b,%b,%0)

&FUN_BOARD_IDS #bbs=iter(if(strlen(%0),%0,u(FUN_BOARDS)),[u(%i0/GETID)]~%i0,%b,|)

&FUN_GETBOARD #bbs=after(grab(%0,%1~*,|),~)

&CMD_@BBS #bbs=$^(?s)(?\:@|\+)?bb(create|rename|order|delete|options|config|list|read|post|reply|edit|remove|write|proof|toss|leave|join|next|new|scan|catchup|lock|unlock|examine|timeout|get)?(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:th setq(!,u(FUN_BOARDS),boards);th setq(!,u(FUN_FILTER_BOARDS,%:,READ,%q<boards>),visiboards);th setq(!,u(FUN_BOARD_IDS,%q<visiboards>),visiboardids);@attach %!/SW_[strfirstof(%1,WRITE)]=trim(%3),%4,rest(%0)
@set #bbs/CMD_@BBS=regexp

&CONFIG_PERM #bbs=@assert/inline gtebittype(%#,5)=@pemit %#=Permission denied.

&CONFIG_TIMEOUTS_DESC #bbs=Enable/disable the Timeout system for all boards.
&CONFIG_TIMEOUTS_DEFAULT #bbs=1
&CONFIG_TIMEOUTS_TYPE #bbs=BOOL

&CONFIG_MANINTERVAL_DESC #bbs=Interval between Mandatory checks?
&CONFIG_MANINTERVAL_DEFAULT #bbs=7200
&CONFIG_MANINTERVAL_TYPE #bbs=DURATION

&SW_CONFIG #bbs=@attach #inc/CONFIG=%0,%1,%!

&SW_CREATE #bbs=@assert/inline strlen(%0)=@pemit %#=No board id entered!;th setq(!,,abbr);th setq(!,,ord);@assert/inline regmatchi(%0,v(REG_BOARD_ID),-1 abbr ord);@if strlen(%q<abbr>)={@assert/inline isobjid(setr(!,u(#fac/FUN_GETABBR,%q<abbr>),fac))=@pemit %#=Sorry but '%q<abbr>' did not match an abbreviated Faction.;@assert/inline lte(facgetrank(%q<fac>,%:),2)=@pemit %#=Permission denied. Only Leaders and Seconds can create Faction boards.},{@assert/inline gtebittype(%#,5)=@pemit %#=Permission denied. Only Wizards may create public boards.};@attach #inc/VALID_POSINT=%q<ord>,Board Order;@break/inline isobjid(u(FUN_GETBOARD,u(FUN_BOARD_IDS,%q<boards>),%0))=@pemit %#=ERROR: BoardID conflict detected.;@assert/inline strlen(%1)=@pemit %#=No board name entered!;@assert/inline valid(name,trim(stripansi(%1)))=@pemit %#=That's not a good name for a Board.;@assert/inline isdbref(setr(!,create(trim(stripansi(%1)),,t),board))=@pemit %#=Error Creating Board: %q<board>;@set %q<board>=INDESTRUCTIBLE;@parent %q<board>=[tag(if(isdbref(%q<fac>),bbs_fparent,bbs_parent))];@set %q<board>=ORDER:%q<ord>;@tel %q<board>=[if(isdbref(%q<fac>),%q<fac>,tag(bbs))];@if has_markup(%1)={@name/ansi %q<board>=[trim(%1)]};@pemit %#=Board '%0: %1' Created.;@attach #inc/MSG_ALERT=Board '%0: %1' Created.

&FINDBOARD #bbs=@assert/inline strlen(%0)=@pemit %#=Must enter a board!;@assert/inline isobjid(setr(!,u(FUN_GETBOARD,%q<visiboardids>,%0),%1))=@pemit %#=That didn't match a board!;@if hastotem(loc(r(%1)),FACTION)={th setq(!,objid(loc(r(%1))),%1fac)}

&FUN_ADMIN #bbs=if(isobjid(%2),lte(facgetrank(%2,%0),2),gtebittype(%0,5))

&BOARD_ADMIN #bbs=@attach %!/FINDBOARD=%0,board;@assert/inline u(FUN_ADMIN,%#,%q<board>,%q<boardfac>)=@pemit %#=Permission denied.

&SW_RENAME #bbs=@attach %!/BOARD_ADMIN;@assert/inline strlen(%1)=@pemit %#=Must enter a new board name!;@assert/inline valid(name,stripansi(trim(%1)))=@pemit %#=That's not a good name for a board.;th setq(!,cname(%q<board>),oldname);@name/ansi %q<board>=%1;@pemit %#=Renamed Board '[u(%q<board>/GETID)]: %q<oldname>' to: [cname(%q<board>)];@attach #inc/MSG_ALERT=Renamed Board '[u(%q<board>/GETID)]: %q<oldname>' to: [cname(%q<board>)]

&SW_ORDER #bbs=@attach %!/BOARD_ADMIN;@attach #inc/VALID_POSINT=%1,Board Order;@assert/inline lmax(iter(u(FUN_GETBOARDS,strfirstof(%q<boardfac>,%!)),eq(get(%i0/ORDER),%q<value>)))=@pemit %#=There is a Board with a conflicting Order in the [if(isdbref(%q<boardfac>),cname(%q<boardfac>),cname(%!))].;th setq(!,get(%q<board>/ORDER),old);@pemit %#=Order of Board '[u(%q<board>/GETID)]: [cname(%q<board>)]' changed to: %q<value>;@attach #inc/MSG_ALERT=Order of Board '[u(%q<board>/GETID)]: [cname(%q<board>)]' changed to: %q<value>;@set %q<board>=ORDER:%q<value>

&SW_DELETE #bbs=@attach %!/BOARD_ADMIN;@assert/inline strmatch(%1,setr(!,cname(%q<board>),oldname))=@pemit %#=You must verify this by entering the name exactly as the second argument.;th setq(!,u(%q<board>/GETID),bid);@attach %!/DO_DELETE=objid(%q<board>);@pemit %#=Board '%q<bid>: %q<oldname>' deleted.;@attach #inc/MSG_ALERT=Board '%q<bid>: %q<oldname>' deleted.

&DO_DELETE #bbs=@set %0=!INDESTRUCTIBLE;@destroy/override %0;@dolist/inline searchngobjid(EVAL=\[attrcnt(##/BBS_[edit(%0,:,_)]_*)\])={@wipe %d0/BBS_[edit(%0,:,_)]_*}

&SW_OPTIONS #bbs=@attach %!/BOARD_ADMIN=trim(before(%0,/));@attach #inc/CONFIG=trim(after(%0,/)),%1,%q<board>

&SW_LOCK #bbs=@attach %!/BOARD_ADMIN=trim(before(%0,/)),board;@attach #inc/PARTIAL=after(%0,/),ReadLock|PostLock|AdminLock,|,lock;@attach #inc/VALID_LOCKKEY=%1;@lock/user %q<board>|%q<lock>=%q<value>;@pemit %#=Changed %q<lock> on Board '%q<bid>: %q<oldname>' to: %q<value>;@attach #inc/MSG_ALERT=Changed %q<lock> on Board '%q<bid>: %q<oldname>' to: %q<value>

&SW_UNLOCK #bbs=@attach %!/BOARD_ADMIN=trim(before(%0,/)),board;@attach #inc/PARTIAL=after(%0,/),ReadLock|PostLock|AdminLock,|,lock;@unlock/user %q<board>|%q<lock>;@pemit %#=Restored Default Lock on Board '%q<bid>: %q<oldname>';@attach #inc/MSG_ALERT=Restored Default Lock on Board '%q<bid>: %q<oldname>'

&SW_EXAMINE #bbs=@attach %!/BOARD_ADMIN;

&FUN_LIST_COLUMNS #bbs=ansi(confoverride(%#,COLUMN),printf($-7s $-30s $-22s $-5s $-5s $-5s,BrdID,Name,Member,#Mess,#Unrd,Perm))

&FUN_PERMDISP #bbs=[if(elock(%0/user|ReadLock,%1),r,%b)][if(elock(%0/user|PostLock,%1),p,%B)][if(elock(%0/user|AdminLock,%1),a,%b)]

&FUN_LIST_ROW #bbs=printf($-7s $-30s $-22s $-5s $-5s $-5s,u(%0/GETID),cname(%0),if(u(FIL_SUBSCRIBED,%0,%#),Yes,No),words(setr(!,get(%0/POSTS),posts)),words(setdiff(%q<posts>,get(strfirstof(account(%#),%#)/BBS_[edit(objid(%0),:,_)]_READ))),u(FUN_PERMDISP,%0,%#))

&SW_LIST #bbs=@pemit %#=header(mudname() BBS - Board Listing);@pemit %#=u(FUN_LIST_COLUMNS);@if words(%q<visiboards>)={@dolist/inline %q<visiboards>={@if !strmatch(%q<last>,setr(!,loc(%d0),last))={@pemit %#=separator(if(hastotem(%q<last>,FACTION),cname(%q<last>),Public) Boards)};@pemit %#=u(FUN_LIST_ROW,%d0)}};@pemit %#=footer()

&FUN_READBOARDS_COLUMNS #bbs=ansi(confoverride(%#,COLUMN),printf($-7s $-30s $-22s $-5s $-5s $-5s,BrdID,Name,Last Post,#Mess,#Unrd,Perm))

&FUN_READBOARDS_ROW #bbs=printf($-7s $-30s $-22s $-5s $-5s $-5s,u(%0/GETID),cname(%0),if(hasattr(%0/LASTPOST),fancytime(get(%0/LASTPOST)),None),words(setr(!,get(%0/POSTS),posts)),words(setdiff(%q<posts>,get(strfirstof(account(%#),%#)/BBS_[edit(objid(%0),:,_)]_READ))),u(FUN_PERMDISP,%0,%#))

&FIL_SUBSCRIBED #bbs=get_kv(get(%1/BBS_[edit(objid(%0),:,_)]_OPTIONS),Subscribed,1)

&INC_READ_BOARDS #bbs=@pemit %#=header(mudname() BBS - Boards);@pemit %#=u(FUN_READBOARDS_COLUMNS);@if words(setr(!,filter(FIL_SUBSCRIBED,%q<visiboards>,%b,%b,strfirstof(account(%#),%#)),sboards))={@dolist/inline %q<sboards>={@if !strmatch(%q<last>,setr(!,loc(%d0),last))={@pemit %#=separator(if(hastotem(%q<last>,FACTION),cname(%q<last>),Public) Boards)};@pemit %#=u(FUN_READBOARDS_ROW,%d0)}};@pemit %#=footer()

&FUN_READBOARD_COLUMN #bbs=ansi(confoverride(%#,COLUMN),printf($-7s $-2s $-24s $-20s $-21s,ID,Rd,Title,PostDate,Author))

&FUN_READBOARD_ROW #bbs=printf($-7s $-2s $-24s $-20s $-21s,%3/%0,if(!match(%4,%0),U),after(setr(!,get(%1/P_%0_HDR),hdr),^),fancytime(get_kv(before(%q<hdr>,^),PostDate)),if(getconf(%0,ISANONYMOUS),if(%5,getconf(%0,ANONYMOUS)%B\([cname(get_kv(before(%q<hdr>,^),Author))]\),getconf(%0,ANONYMOUS)),cname(get_kv(before(%q<hdr>,^),Author))))

&INC_READ_BOARD #bbs=@attach %!/FINDBOARD=%0,board;@pemit %#=header(if(isdbref(%q<boardfac>),cname(%q<boardfac>),Public) Boards - [setr(!,u(%q<board>/GETID),boardid)]: [cname(%q<board>)]);@pemit %#=u(FUN_READBOARD_COLUMN);@if words(setr(!,get(%q<board>/POSTS),posts))={th setq(!,elock(%q<board>/user|AdminLock,%#),boardmin);th setq(!,get(strfirstof(account(%#),%#)/BBS_[edit(objid(%q<board>),:,_)]_READ),read);@dolist/inline %q<posts>={@pemit %#=u(FUN_READBOARD_ROW,%d0,%q<board>,%q<boardfac>,%q<boardid>,%q<read>,%q<boardmin>)}};@pemit %#=footer()

&FUN_NAMEDELETED #bbs=if(isobjid(%0),cname(%0),%1 \(Deleted\))

&DO_DISPLAY #bbs=@pemit %#=header(if(hastotem(loc(%0),FACTION),cname(loc(%0)),Public) Board - [u(%0/GETID)]: [cname(%0)]);th setq(!,get(%0/P_%1_HDR),hdr);th setq(!,before(%q<hdr>,^),data);th setq(!,after(%q<hdr>,^),title);@pemit %#=ljust(Message: [u(%0/GETID)]/%1,35)Posted[space(14)]Author%r[ljust(%q<title>,35)][ljust(fancytime(get_kv(%q<data>,Postdate)),20)][ljc(if(getconf(%0,ISANONYMOUS),if(u(FIL_CANADMIN,%0,%#),getconf(%0,ANONYMOUS)%B\([u(FUN_NAMEDELETED,get_kv(%q<data>,Author),get_kv(%q<data>,AuthorName))]\),getconf(%0,ANONYMOUS)),u(FUN_NAMEDELETED,get_kv(%q<data>,Author),get_kv(%q<data>,AuthorName))),21)]%R[separator()];@pemit %#=get(%0/P_%1_BDY);@pemit %#=footer();th setq(!,strfirstof(account(%#),%#),target);@set %q<target>=[setr(!,BBS_[edit(objid(%0),:,_)]_READ,attr)]:[setunion(setinter(get(%0/POSTS),get(%q<target>/%q<attr>)),%1)]
@@ %0 - board, %1 - post ID.

&INC_READ_POST #bbs=@attach %!/FINDBOARD=trim(before(%0,/)),board;@assert/inline match(get(%q<board>/POSTS),setr(!,trim(after(%0,/)),post))=@pemit %#=Post '%q<post>' not found.;@attach %!/DO_DISPLAY=%q<board>,%q<post>

&SW_READ #bbs=@if strlen(%0)={@if strmatch(%0,*/*)={@attach %!/INC_READ_POST},{@attach %!/INC_READ_BOARD}},{@attach %!/INC_READ_BOARDS}

&DO_CHECK #bbs=@assert/inline u(FIL_CANPOST,%0,%#)=@pemit %#=Cannot post to that board!;@assert/inline strlen(%1)=@pemit %#=No title entered for the post!;@assert/inline strlen(%2)=@pemit %#=There is no text in your post!;@assert/inline if(strlen(%3),match(get(%0/POSTS),%3),1)=@pemit %#=That thread no longer exists!;@break/inline gte(words(get(%0/POSTS)),3000)=@pemit %#=That board is at capacity!;@if strlen(%3)={@set %0=[setr(!,P_[before(%3,.)]_NEXTID,attr)]:[setr(!,inc(get(%0/%q<attr>)),postid)];th setq(!,[before(%3,.)].%q<postid>,postid)},{@set %0=NEXTID:[setr(!,inc(get(%0/NEXTID)),postid)]};@trigger #bbs/DO_POST=%0,%:,%q<postid>,%1,%2,%3;

&INC_FINISH_POST #bbs=@assert/inline hasattr(%#/BB_TITLE)=@pemit %#=You are not writing a post!;@attach %!/DO_CHECK=get(%#/BB_BOARD),get(%#/BB_TITLE),get(%#/BB_BODY),get(%#/BB_REPLY);@wipe %#/BB_*

&FIL_SUBSCRIBED2 #bbs=cand(u(FIL_CANREAD,%1,%0),u(FIL_SUBSCRIBED,%1,strfirstof(account(%0),%0)))

&DO_POST #bbs=@set %0=POSTS:[setunion(get(%0/POSTS),%2)];@set %0=LASTPOST:[secs()];@set %0=P_%2_HDR:Author~%1|PostDate~[get(%0/LASTPOST)]|Modified~[get(%0/LASTPOST)]|AuthorName~[name(%1)]|Timeout~[add(get(%0/LASTPOST),getconf(%0,TIMEOUT))]^%3;@set %0=P_%2_BDY:%4;@set [strfirstof(account(%1),%1)]=BBS_[edit(objid(%0),:,_)]_READ:[setunion(setinter(get(strfirstof(account(%1),%1)/BBS_[edit(objid(%0),:,_)]_READ),get(%0/POSTS)),%2)];@skip [t(%6)]={@dolist/inline [filter(FIL_SUBSCRIBED2,lwhoid(),%b,%b,%0)]={@pemit %d0=[ansi(c,BBS:)]%BNew BB [if(strlen(%5),reply,message)] ([u(%0/GETID)]/%2) posted to '[cname(%0)]' by [if(getconf(%0,ISANONYMOUS),if(u(FIL_CANADMIN,%0,%1),getconf(%0,ANONYMOUS)%B\([getconf(%0,ANONYMOUS)]\),getconf(%0,ANONYMOUS)),cname(%1))]: %3}}
@@ %0 - Board, %1 - author objid, %2 - post id, %3 - post title, %4 - post body, %5 - post reply to?, %6 - don't announce.

&INC_START_POST #bbs=@if strlen(%0)={@break/inline hasattr(%#/BB_TITLE)=@pemit %#=You are already writing a post! Use +bbpost without arguments to post\, +bbproof to view\, +bbtoss to cancel\.;@attach %!/FINDBOARD=before(%0,/),board;@assert/inline u(FIL_CANPOST,%q<board>,%#)=@pemit %#=Permission denied.;@if [t(%2)]={@assert/inline match(get(%q<board>/POSTS),setr(!,trim(after(%0,/)),post))=@pemit %#=Post '%q<post>' not found.;th setq(!,RE: [setr(!,after(get(%q<board>/P_%q<post>_HDR),^),otitle)],title)},{@assert/inline strlen(setr(!,trim(after(%0,/)),title))=@pemit %#=Must provide a post title!};@set %#=BB_TITLE:%q<title>;@set %#=BB_BOARD:%q<board>;@if [t(%2)]={@set %#=BB_REPLY:%q<post>};@pemit %#=You have begun writing a [if(%2,reply to [u(%q<board>/GETID)]/%q<post>: %q<otitle>., new message on [cname(%q<board>)]: %q<title>.)]. Use [ansi(hw,+bb <text>)] to append text. Use [ansi(hw,+bbproof)] to view current progress. Use [ansi(hw,+bbtoss)] to cancel. When finished use [ansi(hw,+bbpost)] by itself to post.},{@attach %!/INC_FINISH_POST}

&SW_POST #bbs=@if strlen(%1)={@if strmatch(%0,*/*)={@attach %!/FINDBOARD=before(%0,/),board;@assert/inline u(FIL_CANPOST,%q<board>,%#)=@pemit %#=Permission denied.;@attach %!/DO_CHECK=%q<board>,trim(after(%0,/)),%1},{@pemit %#=ERROR: That's not how you post a message!}},{@attach %!/INC_START_POST=%0,%1,0}

&SW_REPLY #bbs=@if strlen(%1)={@if strmatch(%0,*/*)={@attach %!/FINDBOARD=before(%0,/),board;@assert/inline u(FIL_CANPOST,%q<board>,%#)=@pemit %#=Permission denied.;@assert/inline match(get(%q<board>/POSTS),setr(!,trim(after(%0,/)),post))=@pemit %#=Post '%q<post>' not found.;@attach %!/DO_CHECK=%q<board>,RE: [after(get(%q<board>/P_%q<post>_HDR),^)],%1,%q<post>},{@pemit %#=ERROR: That's not how you post a message!}},{@attach %!/INC_START_POST=%0,%1,1}

&INC_CANMODIFY #bbs=@attach %!/FINDBOARD=%0,board;@assert/inline u(FIL_CANPOST,%q<board>,%#)=@pemit %#=Permission denied.;@assert/inline match(get(%q<board>/POSTS),setr(!,%1,post))=@pemit %#=Post '%q<post>' not found.;th setq(!,graball(get(%q<board>/POSTS),[before(%q<post>,.)].*),replies);th setq(!,iter(%q<replies>,after(%i0,.)),fibers);@assert/inline cor(u(FIL_CANADMIN,%q<board>,%#),strmatch(%:,get_kv(before(get(%q<board>/P_%q<post>_HDR),^),Author)))=@pemit %#=Permission denied.;@break/inline cand(strmatch(%q<post>,*.*),!cor(u(FIL_CANADMIN,%q<board>,%#),eq(after(%q<post>,.),lmax(%q<fibers>))))=@pemit %#=Only the latest reply can be %2.;
@@ %0 - board to find., %1 - post, %2 - action

&SW_EDIT #bbs=@assert/inline strlen(%0)=@pemit %#=What will you edit?;@if strmatch(%0,*/*)={@attach %!/INC_CANMODIFY=trim(before(%0,/)),trim(after(%0,/)),edited;@assert/inline strlen(before(%1,^^^))=@pemit %#=No search pattern entered.;@set %q<board>=P_%q<post>_BDY:[setr(!,medit(get(%q<board>/P_%q<post>_BDY),before(%1,^^^),after(%1,^^^)),results)];@set %q<board>=[set_kv(before(setr(!,get(%q<board>/P_%q<post>_HDR),hdr),^),Modified,secs())]^[after(%q<hdr>,^)];@pemit %#=Post edited. Results:%R%q<results>},{@attach #inc/PARTIAL=%0,BODY|TITLE,|,choice;@assert/inline strlen(before(%1,^^^))=@pemit %#=No search pattern entered.;@break/inline cand(strmatch(TITLE,%q<choice>),hasattr(%#/BB_REPLY))=@pemit %#=Cannot change Title of a +bbreply.;@set %#=BB_%q<choice>:[setr(!,medit(get(%#/BB_%q<choice>),before(%1,^^^),after(%1,^^^)),results)];@pemit %#=Post-in-progress edited. New %q<choice> is:%R%q<results>}

&DO_REMOVE #bbs=@dolist/inline %1={@wipe %0/P_%d0_*};@set %0=POSTS:[setr(!,setdiff(get(%0/POSTS),%1),newposts)];th setq(!,BBS_[edit(objid(%0),:,_)]_READ,bbattr);@dolist/inline searchngobjid(EVAL=\[attrcnt(##/%q<bbattr>)\])={@set %d0=%q<bbattr>:[setinter(get(%d0/%q<bbattr>),%q<newposts>)]}
@@ %0 - board, %1 - IDS to remove.

&SW_REMOVE #bbs=@attach %!/INC_CANMODIFY=trim(before(%0,/)),trim(after(%0,/)),removed;@break/inline cand(!strmatch(%q<post>,*.*),words(%q<replies>),!cand(u(FIL_CANADMIN,%q<board>,%#),strmatch(%1,DELETE)))=@pemit %#=Permission denied. Only board admin may delete posts which have replies by entering it as [ansi(hw,+bbremove <board>/<post>=DELETE)] to verify.;@attach %!/DO_CLEANUP=%q<board>,setr(!,if(strmatch(%q<post>,*.*),%q<post>,%q<post> %q<replies>),ids);@pemit %#=Removed Posts '%q<ids>' from Board '[u(%q<board>/GETID)] [cname(%q<board>)]';@attach #inc/MSG_ALERT=Removed Posts '%q<ids>' from Board '[u(%q<board>/GETID)] [cname(%q<board>)]'

&SW_WRITE #bbs=@assert/inline hasattr(%#/BB_TITLE)=@pemit %#=You are not writing a post!;@assert/inline strlenraw(%2)=@pemit %#=No text entered to append!;@break/inline gte(add(strlenraw(%2),strlenraw(get(%#/BB_BODY))),sub(config(lbuf_size),1))=That would break buffer capacity.;@set %#=BB_BODY:[cat(get(%#/BB_BODY),%2)];@pemit %#=Text appended. Use [ansi(hw,+bbproof)] to view the results.

&SW_TOSS #bbs=@assert/inline hasattr(%#/BB_TITLE)=@pemit %#=You are not writing a post!;@wipe %#/BB_*;@pemit %#=Post in progress cleared.

&SW_PROOF #bbs=@assert/inline hasattr(%#/BB_TITLE)=@pemit %#=You are not writing a post!;@pemit %#=header(cname(setr(!,get(%#/BB_BOARD),board)));@if hasattr(%#/BB_REPLY)={@pemit %#=Reply to: [u(%q<board>/GETID)]/[setr(!,get(%#/BB_REPLY),reply)]: [after(get(%q<board>/P_%q<reply>_HDR),^)]},{@pemit %#=Title: [get(%#/BB_TITLE)]};@pemit %#=separator();@pemit %#=get(%#/BB_BODY);@pemit %#=footer(Buffer Remaining: [strlenraw(get(%#/BB_BODY))]/[sub(config(lbuf_size),1)])

&SW_JOIN #bbs=@attach %!/FINDBOARD=%0,board;@break/inline u(FIL_SUBSCRIBED,%q<board>,%#)=@pemit %#=You are already subscribed to [cname(%q<board>)]!;@set %#=[setr(!,BBS_[edit(objid(%q<board>),:,_)]_OPTIONS,attr)]:[del_kv(get(%#/%q<attr>),Subscribed)];@pemit %#=You have joined Board '[cname(%q<board>)]'!

&SW_LEAVE #bbs=@attach %!/FINDBOARD=%0,board;@assert/inline u(FIL_SUBSCRIBED,%q<board>,%#)=@pemit %#=You are not subscribed to [cname(%q<board>)]!;@set %#=[setr(!,BBS_[edit(objid(%q<board>),:,_)]_OPTIONS,attr)]:[set_kv(get(%#/%q<attr>),Subscribed,0)];@pemit %#=You have unsubscribed from Board '[cname(%q<board>)]'!

&SW_NEXT #bbs=@dolist/inline %q<visiboards>={th setq(!,get(strfirstof(account(%#),%#)/BBS_[edit(objid(%d0),:,_)]_READ),read);@dolist/inline get(%d0/POSTS)={@break/inline !match(%q<read>,%d0)={@attach %!/DO_DISPLAY=%d1,%d0}}};@pemit %#=There are no unread posts you can see! Hooray!

&SW_NEW #bbs=@attach %!/SW_NEXT

&SW_SCAN #bbs=@pemit %#=header(mudname() BBS - Unread Posts);@if words(%q<visiboards>)={th setq(!,strfirstof(account(%#),%#),target);@dolist/inline %q<visiboards>={@if words(setr(!,setdiff(get(%d0/POSTS),get(%q<target>/BBS_[edit(objid(%d0),:,_)]_READ)),unread))={@if !strmatch(%q<last>,setr(!,loc(%d0),last))={@pemit %#=separator(if(hastotem(%q<last>,FACTION),cname(%q<last>),Public) Boards)};@pemit %#=\([u(%d0/GETID)]\) [cname(%d0)]: [words(%q<unread>)] Unread \([iter(%q<unread>,%i0,%b,%,%B)]\)}}};@pemit %#=footer()

&DO_CATCHUP #bbs=@cpattr %0/POSTS=%1/BBS_[edit(objid(%0),:,_)]_READ
@@ %0 - board, %1 - target

&SW_CATCHUP #bbs=th setq(!,strfirstof(account(%#),%#),target);@if strmatch(%0,ALL)={@dolist/inline %q<visiboards>={@skip getconf(%d0,MANDATORY)={@attach %!/DO_CATCHUP=%d0,%q<target>}};@pemit %#=All posts on all non-Mandatory boards have been marked Read. Hope you didn't miss something useful.},{@attach %!/FINDBOARD=%0,board;@break/inline getconf(%d0,MANDATORY)=@pemit %#=That board is MANDATORY reading.;@attach %!/DO_CATCHUP=%q<board>,%q<target>;@pemit %#=Set all posts Read for Board '[cname(%q<board>)]'. Hope you didn't miss something useful.}

&SW_GET #bbs=