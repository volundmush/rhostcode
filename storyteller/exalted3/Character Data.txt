&CONFIG_TEMPLATES_DEFAULT #stdata=Mortal|Solar|Abyssal|Infernal|Dragon-Blooded|Lunar|Sidereal|Liminal|Getimian|Alchemical|Spirit|Architect|Sovereign|Dream-Souled|Hearteater|Umbral

&CONFIG_MERITSCATEGORIES_DESC #stdata=The categories for Merits.
&CONFIG_MERITSCATEGORIES_DEFAULT #stdata=Normal|Supernatural|Sorcerous|Artifacts
&CONFIG_MERITSCATEGORIES_TYPE #stdata=LIST

&CONFIG_FLAWSCATEGORIES_DESC #stdata=The categories for Flaws.
&CONFIG_FLAWSCATEGORIES_DEFAULT #stdata=Normal
&CONFIG_FLAWSCATEGORIES_TYPE #stdata=LIST

&CONFIG_STYLES_DESC #stdata=The available Martial Arts styles.
&CONFIG_STYLES_DEFAULT #stdata=Snake|Tiger|Single Point Shining Into the Void|White Reaper|Ebon Shadow|Crane|Silver-Voiced Nightingale|Righteous Devil|Black Claw|Dreaming Pearl Courtesan|Steel Devil|Air Dragon|Earth Dragon|Fire Dragon|Water Dragon|Wood Dragon|Golden Janissary|Mantis|White Veil|Centipede|Falcon|Laughing Monster|Swaying Grass Dance|Throne Shadow|Violet Bier of Sorrows|Charcoal March of Spiders|Citrine Poxes of Contagion|Emerald Gyre of Aeons|Obsidian Shards of Infinity|Prismatic Arrangement of Creation|Thousand Blades|Hungry Ghost|Albicant Sepulcher of Extinction|Bear|Monkey|Rat|Toad
&CONFIG_STYLES_TYPE #stdata=LIST

&ATTRIBUTES_PHYSICAL #stdata=Strength|Dexterity|Stamina
&ATTRIBUTES_SOCIAL #stdata=Charisma|Manipulation|Appearance
&ATTRIBUTES_MENTAL #stdata=Perception|Intelligence|Wits
&ATTRIBUTES #stdata=[u(ATTRIBUTES_PHYSICAL)]|[u(ATTRIBUTES_SOCIAL)]|[u(ATTRIBUTES_MENTAL)]

&ATTRIBUTES_MAX #stdata=10

&ATTRIBUTES_TAGREVERSE #stdata=switch(get(%0/ST_TEMPLATE),Lunar,Favored~1|Caste~2,Alchemical,Favored~1|Caste~2)

&ATTRIBUTES_MAXTAG #stdata=switch(get(%0/ST_TEMPLATE),Lunar,2,Alchemical,2,Exigent,2,Architect,1,0)
&ATTRIBUTES_TAGNAME #stdata=switch(get(%0/ST_TEMPLATE),Lunar,switch(%2,1,Favored,2,Caste),Alchemical,switch(%2,1,Favored,2,Caste),switch(%2,1,Favored,2,Caste))
@@ %0 - target character, %1 - specific attribute, %2 - tag value.
&ATTRIBUTES_GETTAG #stdata=get_kv(get(%0/ST_ATTRIBUTES.TAGGED),%1,0)

&TAG_ATTRIBUTES #stdata=@attach %!/DO_TAG=%0,%1,%2,ATTRIBUTES,ATTRIBUTES,Attribute,Attributes

&ABILITIES #stdata=Archery|Athletics|Awareness|Brawl|Bureaucracy|Craft|Dodge|Integrity|Investigation|Larceny|Linguistics|Lore|Martial Arts|Medicine|Melee|Occult|Performance|Presence|Resistance|Ride|Sail|Socialize|Stealth|Survival|Thrown|War

&ABILITIES_MAX #stdata=switch(%1,Martial Arts,0,Craft,0,10)

&ABILITIES_MAXTAG #stdata=switch(get(%0/ST_TEMPLATE),Solar,3,Abyssal,3,Infernal,3,Sidereal,switch(%2,Martial Arts,0,2),Dragon-Blooded,2,Exigent,2,0)
&ABILITIES_TAGNAME #stdata=switch(get(%0/ST_TEMPLATE),Solar,switch(%2,1,Favored,2,Caste,3,Supernal),Abyssal,switch(%2,1,Favored,2,Caste,3,Apocalyptic),Infernal,switch(%2,1,Favored,2,Caste,3,Profane),Dragon-Blooded,switch(%2,1,Favored,2,Aspect),switch(%2,1,Favored,2,Caste))

&ABILITIES_TAGREVERSE #stdata=switch(get(%0/ST_TEMPLATE),Solar,Favored~1|Caste~2|Supernal~3,Abyssal,Favored~1|Caste~2|Apocalyptic~3,Infernal,Favored~1|Caste~2|Profane~3,Sidereal,Favored~1|Caste~2,Dragon-Blooded,Favored~1|Aspect~2)

&ABILITIES_RAW_GETTAG #stdata=get_kv(get(%0/ST_ABILITIES.TAGGED),%1,0)
&ABILITIES_GETTAG #stdata=switch(%1,Martial Arts,switch(get(%0/ST_TEMPLATE),Sidereal,2,max(u(ABILITIES_RAW_GETTAG,Martial Arts),min(u(ABILITIES_RAW_GETTAG,Brawl),2))),Brawl,max(u(ABILITIES_RAW_GETTAG,Brawl),min(u(ABILITIES_RAW_GETTAG,Martial Arts),2)),u(ABILITIES_RAW_GETTAG,before(%1,:)))

&TAG_ABILITIES #stdata=@attach %!/DO_TAG=%0,%1,%2,ABILITIES,ABILITIES,Ability,Abilities

&STYLES #stdata=getconf(%!,STYLES)

&SPLAT_X_MORTAL #stdata=Warrior|Priest|Broker|Savant|Rogue
&SPLAT_X_MORTAL_NAME #stdata=Profession

&SPLAT_X_SOLAR #stdata=Dawn|Zenith|Eclipse|Twilight|Night

&SPLAT_X_ABYSSAL #stdata=Dusk|Midnight|Moonshadow|Daybreak|Day
&FIELDS_ABYSSAL #stdata=Deathlord

&SPLAT_X_INFERNAL #stdata=Azimuth|Ascendant|Horizon|Nadir|Penumbra

&SPLAT_X_DRAGON-BLOODED #stdata=Fire|Earth|Air|Wood|Water
&SPLAT_X_DRAGON-BLOODED_NAME #stdata=Aspect
&FIELDS_DRAGON-BLOODED #stdata=House

&SPLAT_X_LUNAR #stdata=Full Moon|Changing Moon|No Moon|Casteless
&FIELDS_LUNAR #stdata=Spirit Shape

&SPLAT_X_SIDEREAL #stdata=Journeys|Serenity|Battles|Secrets|Endings

&SPLAT_X_LIMINAL #stdata=Blood|Breath|Flesh|Marrow|Soil
&SPLAT_X_LIMINAL_NAME #stdata=Aspect

&SPLAT_X_ALCHEMICAL #stdata=Orichalcum|Moonsilver|Jade|Starmetal|Soulsteel|Adamant

&SPLAT_X_GETIMIAN #stdata=Spring|Summer|Autumn|Winter

&SPLAT_X_EXIGENT #stdata=Terrestrial|Celestial

&EXCHARM #stdata=Offense|Defense|Social|Mobility

&CHARMS_SOLAR #stdata=[u(ABILITIES)]|Eclipse|Submodules

&CHARMS_ABYSSAL #stdata=u(CHARMS_SOLAR)

&CHARMS_INFERNAL #stdata=u(CHARMS_SOLAR)

&CHARMS_DRAGON-BLOODED #stdata=u(CHARMS_SOLAR)

&CHARMS_LUNAR #stdata=[u(ATTRIBUTES)]|Universal|Eclipse

&CHARMS_SIDEREAL #stdata=[u(ABILITIES)]|[u(SPLAT_X_SIDEREAL)]

&CHARMS_SOVEREIGN #stdata=Universal|Craft|Sorcery|Integrity|Performance|Socialize|War

&CHARMS_ARCHITECT #stdata=[u(ATTRIBUTES)]|Sorcery|Eclipse

&CHARMS_DREAM-SOULED #stdata=Excellencies|Illusion|[u(EXCHARM)]|Mobility|Eclipse

&CHARMS_HEARTEATER #stdata=Pawn|[u(EXCHARM)]|Mysticism|Eclipse

&CHARMS_UMBRAL #stdata=Penumbra|Darkness|[u(EXCHARM)]

&CHARMS_EXIGENT #stdata=[u(ATTRIBUTES)]|[u(ABILITIES)]|Eclipse|Universal|Essence|Excellencies|[u(EXCHARM)]|Mysticism

&SET_ABILITIES #stdata=@attach %!/DO_STATLIKE=%0,%1,%2,ABILITIES,ABILITIES,Ability,Abilities,1
&SET_STYLES #stdata=@attach %!/DO_STATLIKE=%0,%1,%2,STYLES,STYLES,Style,Styles,1

&DO_CHARMS #stdata=@assert/inline strlen(%1)=@pemit %#=No Charm Type category entered!;@attach #inc/PARTIAL=%1,capnames(iter(lattr(%!/CHARMS_*),after(%i0,_),%b,|)),|,type,Charm Type;@assert/inline strlen(%2)=@pemit %#=No %q<type> Charm category entered!;@attach #inc/PARTIAL=%2,u(CHARMS_%q<type>),|,category,%q<type> Charm Category;@assert/inline setr(!,u(FUN_VALID_WORDPOWER,%3,CHARM),res)=@pemit %#=That's not a valid Charm name: %q<res>;@assert/inline isint(%4)=@pemit %#=Must enter a value to modify the Charm by!;@attach %!/HANDLE_WORDPOWER=%0,%3,%4,edit(ST_CHARMS.%q<type>.%q<category>,%B,_);th setq(!,[ansi(hc,capnames(%q<type> %q<category> Charm:))] [ansi(hw,capnames(%3))],tname);@if lte(%q<newvalue>,0)={@attach %!/REPORT=%0,Removed all counts of %q<tname>},{@attach %!/REPORT=%0,Now counting [ansi(hg,%q<newvalue> purchase[if(gt(%q<newvalue>,1),s)])] of %q<tname>}
@@ %0 - target character, %1 - major category, %2 - secondary category, %3 - charm name, %4 - value to modify by.

&ADD_NATIVE #stdata=@assert/inline strlen(setr(!,get(%0/ST_TEMPLATE),template))=@pemit %#=Set a template first!;@assert/inline hasattr(%!/CHARMS_%q<template>)=@pemit %#=No native Charms for a %q<template>;@attach %!/DO_CHARMS=%0,%q<template>,%1,before(%2,~),mul(if(%3,-1,1),strfirstof(after(%2,~),1))
&REM_NATIVE #stdata=@attach %!/ADD_NATIVE=%0,%1,%2,1
@@ %0 - target character, %1 - charm category, %2 charm name., %3 reverse sign

&ADD_CHARM #stdata=@attach %!/DO_CHARMS=%0,elementsmux(%1,1,|),elementsmux(%1,2,|),before(%2,~),mul(if(%3,-1,1),strfirstof(after(%2,~),1))
&REM_CHARM #stdata=@attach %!/ADD_CHARM=%0,%1,%2,1
@@ %0 - target character, %1 - major category|secondary category, %2 - charm name, %3 - reverse sign

&FUN_VALID_EVOSTYLE #stdata=ofparse(3,if(strlen(%0),1,#-1 NO %1 CATEGORY NAME ENTERED),if(!contains_character(%0,.),1,#-1 A %1 CATEGORY NAME MAY NOT CONTAIN PERIODS),if(valid(attrname,ST_%2.%0,%b,_),1,#-1 INVALID AS AN ATTRIBUTE. TRY REMOVING SPECIAL CHARACTERS LIKE :),1)

&DO_EVOSTYLE #stdata=@assert/inline strlen(%1)=@pemit %#=No %5 entered!;@if words(%6,|)={@attach #inc/PARTIAL=%1,%6,|,category,%5},{th setq(!,trim(%1),category)};@assert/inline setr(!,u(FUN_VALID_EVOSTYLE,%q<category>,%5,%4),res)=@pemit %#=That's not a good name for a %5: %q<res>;@assert/inline setr(!,u(FUN_VALID_WORDPOWER,%2,%5),res)=@pemit %#=That's not a valid Charm name: %q<res>;@assert/inline isint(%3)=@pemit %#=Must enter a value to modify the Charm by!;@attach %!/HANDLE_WORDPOWER=%0,%2,%3,edit(ST_%4.%q<category>,%B,_)
@@ %0 - target character, %1 - artifact or style name, %2 - charm name, %3 - value to modify by, %4 - root attr, %5 - singular name of %1, %6 - choices. if not provided, will do normal validation.

&DO_EVOCATIONS #stdata=@attach %!/DO_EVOSTYLE=%0,%1,%2,%3,EVOCATIONS,Artifact;th setq(!,[ansi(hc,capnames(%q<category> Evocation:))] [ansi(hw,capnames(%2))],tname);@if lte(%q<newvalue>,0)={@attach %!/REPORT=%0,Removed all counts of %q<tname>},{@attach %!/REPORT=%0,Now counting [ansi(hg,%q<newvalue> purchase[if(gt(%q<newvalue>,1),s)])] of %q<tname>}
@@ %0 - target character, %1 - artifact name, %2 - charm name, %3 - value to modify by.

&ADD_EVOCATION #stdata=@attach %!/DO_EVOCATIONS=%0,elementsmux(%1,1,|),before(%2,~),mul(if(%3,-1,1),strfirstof(after(%2,~),1))
&REM_EVOCATION #stdata=@attach %!/ADD_EVOCATION=%0,%1,%2,1

&DO_STYLECHARM #stdata=@attach %!/DO_EVOSTYLE=%0,%1,%2,%3,STYLECHARMS,Style,u(STYLES);th setq(!,[ansi(hc,capnames(%q<category> Charm:))] [ansi(hw,capnames(%2))],tname);@if lte(%q<newvalue>,0)={@attach %!/REPORT=%0,Removed all counts of %q<tname>},{@attach %!/REPORT=%0,Now counting [ansi(hg,%q<newvalue> purchase[if(gt(%q<newvalue>,1),s)])] of %q<tname>}
@@ %0 - target character, %1 - artifact name, %2 - charm name, %3 - value to modify by.

&ADD_STYLECHARM #stdata=@attach %!/DO_STYLECHARM=%0,elementsmux(%1,1,|),before(%2,~),mul(if(%3,-1,1),strfirstof(after(%2,~),1))
&REM_STYLECHARM #stdata=@attach %!/ADD_STYLECHARM=%0,%1,%2,1

&SORCERY_CIRCLES #stdata=Terrestrial|Celestial|Solar
&NECROMANCY_CIRCLES #stdata=Ivory|Shadow|Void

&DO_SORCERY #stdata=@attach %!/DO_EVOSTYLE=%0,%1,%2,%3,SORCERY,Spell,u(SORCERY_CIRCLES);th setq(!,[ansi(hc,capnames(%q<category> Circle Sorcery Spell:))] [ansi(hw,capnames(%2))],tname);@if lte(%q<newvalue>,0)={@attach %!/REPORT=%0,Removed all counts of %q<tname>},{@attach %!/REPORT=%0,Now counting [ansi(hg,%q<newvalue> purchase[if(gt(%q<newvalue>,1),s)])] of %q<tname>}
&ADD_SORCERY #stdata=@attach %!/DO_SORCERY=%0,elementsmux(%1,1,|),before(%2,~),mul(if(%3,-1,1),strfirstof(after(%2,~),1))
&REM_SORCERY #stdata=@attach %!/ADD_SORCERY=%0,%1,%2,1

&DO_NECROMANCY #stdata=@attach %!/DO_EVOSTYLE=%0,%1,%2,%3,NECROMANCY,Spell,u(NECROMANCY_CIRCLES);th setq(!,[ansi(hc,capnames(%q<category> Circle Necromancy Spell:))] [ansi(hw,capnames(%2))],tname);@if lte(%q<newvalue>,0)={@attach %!/REPORT=%0,Removed all counts of %q<tname>},{@attach %!/REPORT=%0,Now counting [ansi(hg,%q<newvalue> purchase[if(gt(%q<newvalue>,1),s)])] of %q<tname>}
&ADD_NECROMANCY #stdata=@attach %!/DO_NECROMANCY=%0,elementsmux(%1,1,|),before(%2,~),mul(if(%3,-1,1),strfirstof(after(%2,~),1))
&REM_NECROMANCY #stdata=@attach %!/ADD_NECROMANCY=%0,%1,%2,1

&SET_CASTE #stdata=@attach %!/DO_SPLAT=%0,%1,%2,X,Caste

&MERITS_MAX #stdata=6
&MERITS_CONTEXT #stdata=1
&FLAWS_CONTEXT #stdata=1

&ADVANTAGES #stdata=Essence|Willpower

&SET_ADVANTAGES #stdata=@attach %!/DO_STATLIKE=%0,%1,%2,ADVANTAGES,ADVANTAGES,Advantage,Advantages,0

&DO_MERITLIKE #stdata=@assert/inline elementsmux(%1,1,|)=@pemit %#=What kind of %5?;@attach #inc/PARTIAL=elementsmux(%1,1,|),getconf(%!,%4CATEGORIES),|,category,category;@attach %!/DO_STATLIKE=%0,after(%1,|),%2,%3,edit(%4.%q<category>,%b,_),%q<category> %5,%q<category> %6,0,1

&SET_MERITS #stdata=@attach %!/DO_MERITLIKE=%0,%1,%2,MERITS,MERITS,Merit,Merits,0,1
&SET_FLAWS #stdata=@attach %!/DO_MERITLIKE=%0,%1,%2,FLAWS,FLAWS,Flaw,Flaws,0,1

&FUN_QUICK_BASE #stdata=Template~TEMPLATE|Caste~CASTE

&FUN_QUICK_STATS #stdata=iter(ATTRIBUTES~ATTRIBUTES|ABILITIES~ABILITIES|STYLES~STYLES|ADVANTAGES~ADVANTAGES,iter(u(before(%i0,~)),%i0~[after(%i1,~)],|,|),|,|)

&HELP_NATIVE #stdata=Native Charms. For a Solar, this would be Solar Charms. This exists as a shortcut to Charms|<template>.%R%R[if(strmatch(%#,num(%q<target>)),Your,cname(%q<target>)'s)] available Native Charm categories: [ansi(hw,strfirstof(elist(u(CHARMS_[get(%#/ST_TEMPLATE)]),,|),Nothing!))]

&HELP_CHARMS #stdata=The Charms of the Exalted and other beings. Charms are subdivided by Major Type and a Subcategory.%R%RType and Category support partial matching, but there is [ansi(hr,NO)] database of Charms. The system will accept any charm names you type, within reason. So, unfortunately, you must type out Blazing Solar Bolt and Ox-Body Technique and etc. Don't worry about capitalization, though. Our system will normalize it.%R%R[ansi(hc,Examples:)]%R[ansi(hw,add Charm|Solar|Melee=Blazing Solar Bolt)]%RThe lazy version: [ansi(hw,add cha|so|mel=blazing solar bolt)]%R[ansi(hw,add Charm|Solar|Resistance=Ox-Body Technique~5)] would add 5 purchases of Ox-Body at once.%R[ansi(hw,rem cha|sol|res=ox-body technique~4)] would then remove 4 of them.%R%R[ansi(hc,Notes:)]%RThe [ansi(hw,Native)] option is a shortcut to Charm|<type> based on the character being edited. If a Solar is targeted, then it's Solar Charms, etc. So you could [ansi(hw,add nat|mel=blazing solar bolt)] just as easily.%R%RBelow are the available choices for such in TYPE: <subcategories> format.%R%R[iter(sort(u(GATHER,CHARMS),i,|,|),ansi(hw,%i0): [elist(u(CHARMS_%i0),,|)],|,%R%R)]

&HELP_SORCERY #stdata=Sorcery Spells.%R%R[ansi(hc,Examples:)]%R[ansi(hw,add Sorcery|Terrestrial=Demon of the First Circle)]%R[ansi(hw,add Sorcery|Celestial=Magma Kraken)]%R%R[ansi(hw,Circles:)] [elist(u(SORCERY_CIRCLES),,|)]

&HELP_NECROMANCY #stdata=Necromancy Spells.%R%R[ansi(hc,Examples:)]%R[ansi(hw,add Necromancy|Ivory=Summon Ghost)]%R[ansi(hw,add Necromancy|Shadow=Forest of Ivory Razors)]%R%R[ansi(hw,Circles:)] [elist(u(NECROMANCY_CIRCLES),,|)]

@@ Sheet rendering

&FIL_ABILITY #stdata=t(lmax(edit(after(%0,~),~,%b)))

&SHEET_RENDER #stdata=@dolist/inline ATTRIBUTES ABILITIES CHARMS SORCERY NECROMANCY EVOCATIONS STYLECHARMS={@attach %!/SHEET_%d0}

&SHEET_ABILITIES #stdata=th setq(!,setdiff(iter(setr(!,get(%0/ST_ABILITIES),abil),before(%i0,~),|,|),u(ABILITIES),|,|),exabil);th setq(!,iter(setr(!,get(%0/ST_ABILITIES.TAGGED),tags),before(%i0,~),|,|),tagged);th setq(!,setunion(u(ABILITIES),setunion(%q<exabil>,%q<tagged>,|,|),|,|),allabil);th setq(!,iter(%q<allabil>,%i0~[get_kv(%q<abil>,%i0,0)]~0~[u(ABILITIES_GETTAG,%0,%i0)],|,|),prepabil);th setq(!,filter(FIL_ABILITY,%q<prepabil>,|,|),finabil);@if words(%q<finabil>,|)={@pemit %#=u(FUN_SHEET_HEADER,%0,%1,%2,Abilities)};@pemit %#=printf(setr(!,$1.&:[u(FUN_COLOR,%1,BORDER,|)]:s,col)$-|"[sub(%2,2)]s%q<col>,%R,columns(iter(%q<finabil>,u(FUN_FORMAT_STAT,%0,%1,%2,before(%i0,~),elementsmux(after(%i0,~),1,~),elementsmux(after(%i0,~),2,~),22,ST_ABILITIES,elementsmux(after(%i0,~),3,~),ABILITY),|,|),24,3,l,0,0,,,,1,|,,1),%R)


&SHEET_CHARMS #stdata=@dolist/inline sort(lattr(%0/ST_CHARMS.*))={@skip strmatch(%q<last>,setr(!,capnames(elementsmux(%d0,2,.)),last))={@pemit %#=u(FUN_SHEET_HEADER,%0,%1,%2,%q<last> Charms)};@pemit %#=u(FUN_SHEET_SECTION,%0,%1,%2,capnames(edit(elementsmux(%d0,3,.),_,%B)));@pemit %#=columns(u(FUN_RENDER_WORDLIST,%0,%1,%2,get(%0/%d0),CHARM),38,2,l,0,0,u(FUN_COLOR,%1,BORDER,|),,u(FUN_COLOR,%1,BORDER,|),1,|,%B,1)}

&SHEET_MAGIC #stdata=@if words(setr(!,sort(lattr(%0/ST_%3.*)),attrs))={@pemit %#=u(FUN_SHEET_HEADER,%0,%1,%2,capnames(strfirstof(%5,%3)));@dolist/inline %q<attrs>={@skip strmatch(%q<last>,setr(!,capnames(edit(elementsmux(%d0,2,.),_,%B)),last))={@pemit %#=u(FUN_SHEET_SECTION,%0,%1,%2,%q<last>%4)};@pemit %#=columns(u(FUN_RENDER_WORDLIST,%0,%1,%2,get(%0/%d0),%3_SPELL),38,2,l,0,0,u(FUN_COLOR,%1,BORDER,|),,u(FUN_COLOR,%1,BORDER,|),1,|,%B,1)}}

&SHEET_SORCERY #stdata=@attach %!/SHEET_MAGIC=%0,%1,%2,Sorcery,%BCircle Spells

&SHEET_NECROMANCY #stdata=@attach %!/SHEET_MAGIC=%0,%1,%2,Necromancy,%BCircle Spells

&SHEET_EVOCATIONS #stdata=@attach %!/SHEET_MAGIC=%0,%1,%2,Evocations

&SHEET_STYLECHARMS #stdata=@attach %!/SHEET_MAGIC=%0,%1,%2,StyleCharms,,Style Charms