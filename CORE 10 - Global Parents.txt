@@ Core
@cmdquota me=99999

@skip isdbref(tag(setr(1,gm)))={@assert/inline isdbref(globalroom())=@pemit %#=ERROR: No master room set!;@assert/inline isdbref(setr(0,create(Wizard Doing It,u(#acc/FN.RANDOM_PASSWORD),p)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE GUILDMASTER NO_MODIFY FREE;@power/coun %q0=free_quota tel_anything tel_anywhere;@tag/add %q1=%q0;@tel %q0=[tag(stor)];@limit/dmod %q0=-1}

@dolist/inline/delimit | globobj~Object|globthing~Thing|globexit~Exit|globplayer~Player|globroom~Room=@skip isdbref(tag(setr(1,before(%d0,~))))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object installed!;@assert/inline isdbref(setr(0,create(Global Parent [after(%d0,~)],,t)))=@pemit %#=ERROR: Could not create code object: %q0;@set %q0=VISUAL INDESTRUCTIBLE NO_MODIFY NO_COMMAND;@tag/add %q1=%q0;@tel %q0=[tag(stor)];@chown/preserve %q0=[tag(gm)];@power/coun %q0=FORMATTING;@if !strmatch(%d0,globobj~*)=@parent %q0=[tag(globobj)]}

@skip isdbref(tag(setr(1,stat_parent)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object set!;@assert/inline isdbref(setr(0,create(Stat Parent,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE SAFE NO_COMMAND;@tag/add %q1=%q0;@tel %q0=#stor}

@skip isdbref(tag(setr(1,obj_parent)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object set!;@assert/inline isdbref(setr(0,create(Gameobject Parent,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE SAFE NO_COMMAND;@tag/add %q1=%q0;@tel %q0=#stor}

@skip isdbref(tag(setr(1,item_parent)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object set!;@assert/inline isdbref(setr(0,create(Item Parent,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE SAFE NO_COMMAND;@tag/add %q1=%q0;@tel %q0=#stor;@parent %q0=obj_parent}

@skip isdbref(tag(setr(1,equip_parent)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object set!;@assert/inline isdbref(setr(0,create(Equipment Parent,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE SAFE NO_COMMAND;@tag/add %q1=%q0;@tel %q0=#stor;@parent %q0=#item_parent}

@skip isdbref(tag(setr(1,structure_parent)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object set!;@assert/inline isdbref(setr(0,create(Structure Parent,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE SAFE NO_COMMAND;@tag/add %q1=%q0;@tel %q0=#stor;@parent %q0=#obj_parent}

@skip isdbref(tag(setr(1,vehicle_parent)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object set!;@assert/inline isdbref(setr(0,create(Vehicle Parent,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE SAFE NO_COMMAND;@tag/add %q1=%q0;@tel %q0=#stor;@parent %q0=#structure_parent}

@skip isdbref(tag(setr(1,char_parent)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object set!;@assert/inline isdbref(setr(0,create(Character Parent,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE SAFE NO_COMMAND;@tag/add %q1=%q0;@tel %q0=#stor;@parent %q0=obj_parent}

@skip isdbref(tag(setr(1,npc_parent)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object set!;@assert/inline isdbref(setr(0,create(NPC Parent,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE SAFE NO_COMMAND;@tag/add %q1=%q0;@tel %q0=#stor;@parent %q0=#char_parent}

@skip isdbref(tag(setr(1,pc_parent)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object set!;@assert/inline isdbref(setr(0,create(PC Parent,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE SAFE NO_COMMAND VISUAL;@tag/add %q1=%q0;@tel %q0=#stor;@parent %q0=#char_parent}

@@ General Objects
&GAME.AENTER #globobj=th setq(!,gm_get_upzones(%#),oldupzones);th setq(!,upzones(%#),newupzones);@skip strmatch(%q<oldupzones>,%q<newupzones>)=@attach %!/HANDLE_ZONECHANGE=%#,revwords(listdiff(%q<oldupzones>,%q<newupzones>)),revwords(listdiff(%q<newupzones>,%q<oldupzones>)),msecs(),crc32(%:,objid(%!),%q<oldupzones>,%q<newupzones>)

&HANDLE_ZONECHANGE #globobj=th gm_set_upzones(%0,upzones(%0),%3,%4);th setq(!,filter(#lambda/[lit(hastotem(%1,%0))],CHARACTER ITEM STRUCTURE REGION,%b,%b,%#),totems);@if words(%1)={@dolist/inline/nobreak %1={@trigger/inline %d0/HANDLE_ZONELEAVE=%0,%q<totems>}};@if words(%2)={@dolist/inline/nobreak %2={@trigger/inline %d0/HANDLE_ZONEENTER=%0,%q<totems>}};th setq(!,setunion(lcon(%0),if(hasflag(%0,ZONEMASTER),zlcon(%0))),contents);@if words(%q<contents>)={@dolist %q<contents>={@skip strlen(grab(gm_get_upzones_hash(##),%4~*))=@attach %!/HANDLE_ZONECHANGE=##,%1,%2,%3,%4}}
@@ %0 - Target. %1 - Zones to leave. %2 - Zones to add. %3 - msecs, %4 - anti-circular-recursion hash

&HANDLE_ZONEENTER #globobj=@dolist/inline %1={@if hasattr(%!/HANDLE_ZONEENTER_%d0)={@attach %!/HANDLE_ZONEENTER_%d0=%0,%1}}
@@ %0 - target, %1 - totem list

&HANDLE_ZONELEAVE #globobj=@dolist/inline %1={@if hasattr(%!/HANDLE_ZONELEAVE_%d0)={@attach %!/HANDLE_ZONELEAVE_%d0=%0,%1}}
@@ %0 - target, %1 - totem list

&MANY_TRIGGER #globobj=@if words(setr(!,lattrp_full(%!/%0_*),attrs))=@dolist/inline/nobreak %q<attrs>={@attach %!/%d0}

@aenter #globobj
@aleave #globobj

&LK.TRUE #globobj=[t(%1)]
&LK.GTEBITTYPE #globobj=[if(gtebittype(%#,%1),%1)]
&LK.ISAPPROVED #globobj=[isapproved(%#)]

@@ Players


@@ Rooms
@aenter #globroom=@attach %!/GAME.AENTER
@aleave #globroom

&FN.LOCATION #globroom=iter(revwords(upzones(%!)),cname(%i0)[if(gtebittype(%#,2),%B\([num(%i0)]\))],%b,%b=>%b)

&FN.INFOBOX #globroom=[wrap([ansi(hw,Location:)]%b[u(FN.LOCATION,%!)],sub(width(%#),2),left,setr(!,ansi(confoverride(%#,BORDER),|),bord),%q<bord>,,)]

@nameformat #globroom=[header(cname(%!)[if(gtebittype(%#,2),%B\(%!\))],%#,,1)][if(strlen(setr(!,u(FN.INFOBOX),infobox)),%R%q<infobox>)]
&formatdesc #globroom=[if(strlen(%0),[separator(Description,%#,,1)]%R[wrap(%0,sub(width(%#),2),left,setr(!,ansi(confoverride(%#,BORDER),|),bord),%q<bord>,,)])]
@set #globroom/formatdesc=default

&FIL.TOTEM #globroom=hastotem(%0,%1)

&FN.GETNAME #globroom=cname(%0)[if(controls(%#,%0),%B([num(%0)]))]

&FN.FORMATOBJ_COLUMN #globroom=if(gtebittype(%#,2),printf($1.&:%3:s $-5s $-|"25s $-|"42s $1.&:%3:s,%R,ansi(%2,Dbref),ansi(%2,Name),ansi(%2,Short-Desc),%R),printf($1.&:%3:s $-|"25s $-|"44s $1.&:%3:s,%R,ansi(%2,Name),ansi(%2,Short-Desc),%R))

&FN.FORMATOBJ_ROW #globroom=if(gtebittype(%#,2),printf($1.&:%3:s $-5s $-|"25s $-|"42s $1.&:%3:s,%R,num(%0),cname(%0),default(%0/short-desc,???),%R),printf($1.&:%3:s $-|"25s $-|"44s $1.&:%3:s,%R,cname(%0),default(%0/short-desc,???),%R))

&FN.FORMATOBJ_COLUMN_PCS #globroom=if(gtebittype(%#,2),printf($1.&:%3:s $-5s $-|"21s $-|"37s $-4s $-3s $1.&:%3:s,%R,ansi(%2,Dbref),ansi(%2,Name),ansi(%2,Short-Desc),ansi(%2,Idle),ansi(%2,RP),%R),printf($1.&:%3:s $-|"21s $-|"38s $-4s $-3s $1.&:%3:s,%R,ansi(%2,Name),ansi(%2,Short-Desc),ansi(%2,Idle),ansi(%2,RP),%R))

&FN.FORMATOBJ_ROW_PCS #globroom=if(gtebittype(%#,2),printf($1.&:%3:s $-5s $-|"21s $-|"37s $4s $-3s $1.&:%3:s,%R,num(%0),cname(%0),default(%0/short-desc,???),hideidle(%0),default(%0/RPSTATUS,OOC),%R),printf($1.&:%3:s $-|"33s $-|"29s $4s $-3s $1.&:%3:s,%R,cname(%0),default(%0/short-desc,???),hideidle(%0),default(%0/RPSTATUS,OOC),%R))

&FN.FORMATSECTION #globroom=[separator(%0,%#,,1)]%R[if(hasattrp(%!/FN.FORMATOBJ_COLUMN_%0),u(FN.FORMATOBJ_COLUMN_%0,%0,%1,p%2,%3),u(FN.FORMATOBJ_COLUMN,%0,%1,%2,%3))]%R[trim(iter(%1,if(hasattrp(%!/FN.FORMATOBJ_ROW_%0),u(FN.FORMATOBJ_ROW_%0,%i0,%1,%2,%3),u(FN.FORMATOBJ_ROW,%i0,%1,%2,%3)),%b,%r),b,%r)]

&FIL.HASAFTER #globroom=t(words(after(%0,~)))

&TOTEM_FILTERS #globroom=PCs~PC|NPCs~NPC|Items~ITEM|Structures~STRUCTURE|Regions~Region

&FN.FILTERCON #globroom=[trim(iter(v(TOTEM_FILTERS),setq(!,filter(%!/FIL.TOTEM,%0,%b,%b,after(%i0,~)),before(%i0,~)),|,%B))][setq(!,setdiff(%0,iter(v(TOTEM_FILTERS),r(before(%i0,~)),|,%B)),Objects)]

@conformat #globroom=[if(words(%0),[null(u(FN.FILTERCON,%0))][setq(!,ansi(confoverride(%#,BORDER),|),bord)][setq(!,confoverride(%#,COLUMN),col)][trim(iter(filter(%!/FIL.HASAFTER,iter([v(TOTEM_FILTERS)]|Objects,[before(%i0,~)]~[r(before(%i0,~))],|,|),|,|),%R[u(FN.FORMATSECTION,before(%i0,~),after(%i0,~),%q<col>,%q<bord>)],|,),b,%R)])]

&FN.FORMATEXITS #globroom=separator(%0,%#,,1)%R[printf($1.&:%3:s $-5s $-12s $-55s $1.&:%3:s,%R,ansi(%1,Alias),ansi(%1,Name),ansi(%1,Destination),%R)]%R[trim(iter(%1,printf($1.&:%3:s $-5s $-12s $-55s $1.&:%3:s,%R,getalias(%i0),cname(%i0),cname(loc(%i0)),%R),%B,%R),b,%R)]

@exitformat #globroom=[if(cor(words(%0),words(%2)),[setq(!,confoverride(%#,COLUMN),col)][setq(!,ansi(confoverride(%#,BORDER),|),bord)][if(words(%0),u(FN.FORMATEXITS,Exits,%0,%q<col>,%q<bord>)%R)][if(words(%2),[u(FN.FORMATEXITS,Dark Exits,%2,%q<col>,%q<bord>)]%R)])][footer(,%#,,1)]


@@ Things
@enter #globthing=You enter the [cname(%!)].
@oenter #globthing=enters the [cname(%!)].

@aenter #globthing=@attach %!/GAME.AENTER;@attach %!/MANY_TRIGGER=AENTER
@aleave #globthing=@attach %!/MANY_TRIGGER=ALEAVE

@leave #globthing=You leave the [cname(%!)].
@oleave #globthing=leaves the [cname(%!)].
@oxleave #globthing=emerges from the [cname(%!)].

@@ Exits
@success #globexit=You take the [cname(%!)] exit to [cname(loc(%!))].
@osuccess #globexit=takes the [cname(%!)] exit to [cname(loc(%!))].

&LOCK_BASIC #globexit=cor(gtebittype(%#,2),lmin(1 [iter(lattrp_full(%!,LOCK_BASIC_*),if(u(%!/%i0,%0,%1,%i0),1,0[ibreak()]))]))
@lock/basic #globexit=LOCK_BASIC/1

@@ Game Objects Parent
&CAN_EQUIP #obj_parent=#-1 [cname(%!)] isn't equippable gear!
&CAN_REMOVE #obj_parent=u(CAN_EQUIP,%0,%1)

@@ Character Parent
@lock/basic #char_parent=LK.TRUE/0
@lock/enter #char_parent=LK.TRUE/0

@@ NPC Parent
@lock/receive #char_parent=LK.TRUE/0
@lock/givelock #char_parent=LK.TRUE/0

@@ PC Parent
@lock/givelock #char_parent=LK.TRUE/1