@@ CORE xx - Global Functions

@skip isdbref(tag(setr(1,gfun)))={@assert/inline isdbref(tag(stor))=@pemit %#=ERROR: No storage object installed!;@assert/inline isdbref(setr(0,create(Global Functions,,t)))=@pemit %#=ERROR: Could not create code object: %q0;@set %q0=SAFE SIDEFX INHERIT NO_COMMAND;@tag/add %q1=%q0;@tel %q1=#stor}

&GFUN_STRINGSECS #gfun=ladd(iter(secure(regeditall(%0,(h|m|s),$1%b)),switch(%i0,*ML,mul(%i0,31536000000),*y,mul(%i0,31471200),*C,mul(%i0,3153600000),*Mo,mul(%i0,2628000),*w,mul(%i0,604800),*d,mul(%i0,86400),*h,mul(%i0,3600),*m,mul(%i0,60),*s,add(%i0,0))) 0)

&GFUN_GTBITTYPE #gfun=gt(bittype(%0),%1)
&GFUN_GTEBITTYPE #gfun=gte(bittype(%0),%1)

&GFUN_GET_SWITCHES #gfun=setunion(iter(lnum(7),if(gtebittype(%1,%i0),u(%0/SWITCHES_%i0)),%b,|),u(%0/SWITCHES,%1),|,|)

&GFUN_SET_KV #gfun=setunion(del_kv(%0,%1),%1~%2,|,|)
&GFUN_DEL_KV #gfun=setdiff(%0,grab(%0,%1~*,|),|,|)
&GFUN_GET_KV #gfun=strfirstof(rest(grab(%0,%1~*,|),~),%2)

&GFUN_UCRC32 #gfun=crc32(ucstr(%0))

&GFUN_ATTRIB_SET #gfun=if(writable(%@,%0/%1),set(%0,%1:%2),#-1 WRITE PERMISSION DENIED FOR %0/%1)

&GFUN_ATTRIB_GET #gfun=if(visiblemux(%@,%0/%1),xget(%0,%1),#-1 READ PERMISSION DENIED FOR %0/%1)

&GFUN_SET_AKV #gfun=attrib_set(%0,%1,set_kv(attrib_get(%0,%1),%2,%3))

&GFUN_ITEMIZE #gfun=elist(%0,%2,%1,%4,%3)

&GFUN_SORTNAME #gfun=sortby(#lambda/[lit([comp(lcstr(name(%0)),lcstr(name(%1)))])],%0,if(strlen(%1),%1,%B),if(strlen(%2),%2,%B))

&GFUN_GETALIAS #gfun=switch(type(%0),EXIT,if(strfirstof(%1,1),elementsmux(fullname(%0),2,;),after(fullalias(%0)),chr(59)),get(%0/ALIAS))
@@ %0 - dbref, %1 - full alias if exit.

&GFUN_NAMEMATCH #gfun=t(match(setunion([name(%0)]|[num(%0)]|[objid(%0)],if(%2,getalias(%0)),|,|),%1,|))
&GFUN_GRABNAME #gfun=strmatch(name(%0),%1*)

&GFUN_NAMEFIND #gfun=trim(localize(iter(sortname(%0),if(namematch(%i0,%1,%2),%i0[ibreak()]),%b,|)))
&GFUN_NAMEGRAB #gfun=trim(localize(ofparse(1,iter(setr(0,sortname(%0)),if(namematch(%i0,%1,%2),%i0[ibreak()])),iter(%q0,if(grabname(%i0,%1),%i0[ibreak()])))))
&GFUN_NAMEGRABALL #gfun=trim(localize(ofparse(1,iter(setr(0,sortname(%0)),if(namematch(%i0,%1,%2),%i0[ibreak()])),iter(%q0,if(grabname(%i0,%1),%i0),))))
@@ %0 - dbrefs. %1 - name. %2 - check aliases.

&GFUN_OBJIDS #gfun=squish(iter(%0,if(isdbref(%i0),objid(%i0))))
@@ %0 dbref list.

&GFUN_NUMTH #gfun=%0[switch(%0,11,th,12,th,13,th,switch(right(%0,1),1,st,2,nd,3,rd,th))]

&GFUN_ISAPPROVED #gfun=cor(gtebittype(%0,2),if(globalconf(REQAPPROVAL),default(%0/APPROVED,0))

&REG_CAPNAMES #gfun=(?:^|(?<=[_\/\-\|\s()\+]))([a-z]+)
&REG_CAPNAMES2 #gfun=(^|(?<=[(]))(of|the|a|and)
&REG_CAPNAMES3 #gfun=\b(of|the|a|and)\b

&GPFUN_CAPNAMES #gfun=regeditalli(lcstr(%0),v(REG_CAPNAMES),capstr($1),v(REG_CAPNAMES3),lcstr($0),v(REG_CAPNAMES2),$1[capstr($2)])

&GFUN_COMMAFY #gfun=trim(flip(foreach(#lambda/if(mod([lit(%1)],3),[lit(%0)],\\,[lit(%0)]),flip(%0))),b,chr(44))

&GFUN_RYG #gfun=<[if(gt(%0,50),255,round(mul(255,fdiv(mul(%0,2),100)),0))] [if(gte(%0,50),sub(mul(255,2),round(mul(255,fdiv(mul(%0,2),100)),0)),255)] 0>

&GFUN_STRFIRSTOF #gfun=ofparse(5,%0,%1,%2,%3,%4,%5,%6,%7,%8,%9)

&GFUN_FIRSTOF #gfun=ofparse(1,%0,%1,%2,%3,%4,%5,%6,%7,%8,%9)

&GFUN_AGO #gfun=singletime(%0)
&GFUN_SMALLTIME #gfun=singletime(%0)
&GFUN_ETIME #gfun=[trim(timefmt($!mML $!2UC $!2uy $!2EMo $!2ww $!2dd $!2Xh $!2Fm $!2Gs,%0))][if(!t(%0),0s)]

&GFUN_NCHILDREN #gfun=last(children(%0,l))

&GFUN_CSECS #gfun=convtime(createtime(%0))

&GFUN_CTIME #gfun=createtime(%0)

&GFUN_GETTZ #gfun=UTC

&GFUN_LWHOID #gfun=setunion(lwho(,,1),)

&GFUN_BITWHO #gfun=filter(#lambda/[lit(gte(bittype(%0),%1))],lwhoid(),%b,%b,%0)

&GFUN_FILTEROBJID #gfun=filter(#lambda/[lit(isobjid(%0))],%0)

&GFUN_FANCYTIME #gfun=if(%0,timefmt(switch(%1,2,$a $b $02D $02I:$02M$p $Z,3,$b $02D $02I:$02M$p $Y $Z,day,$b $02D $Y,date,$m/$d/$Y,strfirstof($b $02D $02H:$02T$P $i,%3)),%0,if(strlen(%2),if(isdbref(%2),gettz(%2),%2),gettz(%#))),<invalid date>)

&GFUN_BASECONV #gfun=pack(unpack(%0,%1),%2)

&GFUN_DECOMPOSE #gfun=translate(%0,p)

&GFUN_WIDTH #gfun=78

&GFUN_HAS_MARKUP #gfun=!eq(strlen(%0),strlenraw(%0))

&GFUN_CENTER #gfun=printf($^[strfirstof(%1,78)]:%2:s,%0)

&GFUN_HASATTRVAL #gfun=!!$get(%0)

&GFUN_CONTAINS_CHARACTER #gfun=lmax(iter(%1,strmatch(%0,*%i0*)))

&GFUN_PMATCHID #gfun=localize(if(setr(!,pmatch(%0),res),objid(%q<res>),%q<res>))

&GFUN_PMATCHREG #gfun=setr(!,pmatch(%0),%1)

&GFUN_PARTIAL #gfun=localize(if(setr(0,match(%0,%1,%2)),elementsmux(%0,%q0,%2),grab(%0,%1*,%2)))

&GFUN_SECS_REMAIN #gfun=max(0,sub(%0,secs()))

&GFUN_NAMELIST #gfun=localize(iter(%0,if(!match(setr(0,pmatch(%i0)),#-1*),%q0,#-1[objeval(%#,u(%1,%i0,#-1))])))

&GPFUN_HEADER #gfun=localize(u(HEADER_PREP,%1,HEADER,%2,=)[setq(!,if(strlen(%0),[ansi(%q<bordercolor>,<)][setr(!,ansi(%q<hstarcolor>,*),borderstar)]%B[if(has_markup(%0),%0,ansi(%q<htextcolor>,%0))]%B%q<borderstar>[ansi(%q<bordercolor>,>)]),headertext)][u(HEADER_RENDER,HEADER,%0)])

&GPFUN_SUBHEADER #gfun=localize(u(HEADER_PREP,%1,SUBHEADER,%2,=)[setq(!,if(strlen(%0),[ansi(%q<bordercolor>,<)]%B[if(has_markup(%0),%0,ansi(%q<htextcolor>,%0))]%B[ansi(%q<bordercolor>,>)]),headertext)][u(HEADER_RENDER,SUBHEADER,%0)])

&GPFUN_SEPARATOR #gfun=localize(u(HEADER_PREP,%1,SEPARATOR,%2,-)[setq(!,if(strlen(%0),[ansi(%q<bordercolor>,<)]%B[if(has_markup(%0),%0,ansi(%q<htextcolor>,%0))]%B[ansi(%q<bordercolor>,>)]),headertext)][u(HEADER_RENDER,SEPARATOR,%0)])

&GPFUN_FOOTER #gfun=localize(u(HEADER_PREP,%1,FOOTER,%2,=)[setq(!,if(strlen(%0),[ansi(%q<bordercolor>,<)]%B[if(has_markup(%0),%0,ansi(%q<htextcolor>,%0))]%B[ansi(%q<bordercolor>,>)]),headertext)][u(HEADER_RENDER,FOOTER,%0)])

&HEADER_PREP #gfun=setq(!,owner(strfirstof(%0,%#)),target)[setq(!,globalconf(BORDER),bordercolor)][setq(!,%1,bordermode)][setq(!,globalconf(HDRTEXT),htextcolor)][setq(!,globalconf(HDRSTAR),hstarcolor)][setq(!,sub(width(%q<target>),2),width)][setq(!,%2,lwidth)][setq(!,%3,fill)][switch(%q<bordermode>,2,switch(%2,HEADER,setq(!,ansi(%q<bordercolor>,/),start)[setq(!,ansi(%q<bordercolor>,chr(92)),end)],FOOTER,setq(!,ansi(%q<bordercolor>,chr(92)),start)[setq(!,ansi(%q<bordercolor>,/),end)]),1,setq(!,setr(!,ansi(%q<bordercolor>,+),end),start),setq(!,setr(!,ansi(%q<bordercolor>,%q<fill>),end),start))]

&HEADER_RENDER #gfun=if(%q<screenreader>,if(strlen(%1),%1),%q<start>[if(%q<lwidth>,[repeat(ansi(%q<bordercolor>,%q<fill>),%q<lwidth>,1)]%q<headertext>[repeat(ansi(%q<bordercolor>,%q<fill>),sub(%q<width>,%q<lwidth>,strlen(%q<headertext>)),1)],center(%q<headertext>,%q<width>,ansi(%q<bordercolor>,%q<fill>)))]%q<end>)

@@ HEADER family args: %0 - Title. %1 - Viewer dbref. %2 - left side manual size

@startup #gfun=@attach #inc/REGISTER_FUNCTIONS